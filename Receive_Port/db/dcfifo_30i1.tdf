--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone II" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=4096 LPM_SHOWAHEAD="OFF" LPM_WIDTH=4 LPM_WIDTH_R=8 LPM_WIDTHU=12 LPM_WIDTHU_R=11 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdempty rdreq wrclk wrfull wrreq CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Cyclone II" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 9.1SP2 cbx_a_gray2bin 2010:03:24:20:43:42:SJ cbx_a_graycounter 2010:03:24:20:43:42:SJ cbx_altdpram 2010:03:24:20:43:42:SJ cbx_altsyncram 2010:03:24:20:43:42:SJ cbx_cycloneii 2010:03:24:20:43:43:SJ cbx_dcfifo 2010:03:24:20:43:43:SJ cbx_fifo_common 2010:03:24:20:43:42:SJ cbx_lpm_add_sub 2010:03:24:20:43:43:SJ cbx_lpm_compare 2010:03:24:20:43:43:SJ cbx_lpm_counter 2010:03:24:20:43:43:SJ cbx_lpm_decode 2010:03:24:20:43:43:SJ cbx_lpm_mux 2010:03:24:20:43:43:SJ cbx_mgl 2010:03:24:21:01:05:SJ cbx_scfifo 2010:03:24:20:43:43:SJ cbx_stratix 2010:03:24:20:43:43:SJ cbx_stratixii 2010:03:24:20:43:43:SJ cbx_stratixiii 2010:03:24:20:43:43:SJ cbx_util_mgl 2010:03:24:20:43:43:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_graycounter_q96 (aclr, clock, cnt_en)
RETURNS ( q[11..0]);
FUNCTION a_graycounter_ggc (aclr, clock, cnt_en)
RETURNS ( q[11..0]);
FUNCTION altsyncram_qo61 (aclr1, address_a[11..0], address_b[10..0], addressstall_b, clock0, clock1, clocken1, data_a[3..0], wren_a)
RETURNS ( q_b[7..0]);
FUNCTION dffpipe_ngh (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION alt_synch_pipe_tdb (clock, clrn, d[11..0])
RETURNS ( q[11..0]);
FUNCTION alt_synch_pipe_1e8 (clock, clrn, d[11..0])
RETURNS ( q[11..0]);
FUNCTION cmpr_736 (dataa[11..0], datab[11..0])
RETURNS ( aeb);
FUNCTION cntr_jvd (aset, clock, cnt_en)
RETURNS ( cout, q[0..0]);

--synthesis_resources = lut 1 M4K 4 reg 120 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=S102;{-to p0addr} POWER_UP_LEVEL=LOW;{-to rdptr_g} suppress_da_rule_internal=r105;{-to wrptr_g} suppress_da_rule_internal=s102;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe17|dffe18a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_se9:dffpipe17|dffe18a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe14|dffe15a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_re9:dffpipe14|dffe15a* """;

SUBDESIGN dcfifo_30i1
( 
	aclr	:	input;
	data[3..0]	:	input;
	q[7..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g1p : a_graycounter_q96;
	wrptr_g1p : a_graycounter_ggc;
	fifo_ram : altsyncram_qo61;
	delayed_wrptr_g[11..0] : dffe;
	p0addr : dffe
		WITH (
			power_up = "low"
		);
	rdptr_g[11..0] : dffe;
	wrptr_g[12..0] : dffe;
	rdaclr : dffpipe_ngh;
	rs_dgwp : alt_synch_pipe_tdb;
	ws_dgrp : alt_synch_pipe_1e8;
	rdempty_eq_comp : cmpr_736;
	wrfull_eq_comp : cmpr_736;
	cntr_b : cntr_jvd;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[11..0]	: WIRE;
	ram_address_b[10..0]	: WIRE;
	rdcnt_addr_ena	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[11..0]	: WIRE;

BEGIN 
	rdptr_g1p.aclr = (! rdaclr.q[]);
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = rdcnt_addr_ena;
	wrptr_g1p.aclr = aclr;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = (valid_wrreq & cntr_b.cout);
	fifo_ram.aclr1 = aclr;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! rdcnt_addr_ena);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.clocken1 = valid_rdreq;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_g[12..1].q;
	p0addr.clk = rdclk;
	p0addr.clrn = rdaclr.q[];
	p0addr.d = B"1";
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].clrn = (! aclr);
	wrptr_g[].d = ( wrptr_g1p.q[], cntr_b.q[]);
	wrptr_g[].ena = valid_wrreq;
	rdaclr.clock = (! rdclk);
	rdaclr.clrn = (! aclr);
	rdaclr.d[] = B"1";
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	cntr_b.aset = aclr;
	cntr_b.clock = wrclk;
	cntr_b.cnt_en = valid_wrreq;
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[12..12].q $ wrptr_g[11..11].q), wrptr_g[10..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[11..11] $ rdptr_g1p.q[10..10]), rdptr_g1p.q[9..0]);
	rdcnt_addr_ena = (valid_rdreq # (! p0addr.q));
	rdempty = int_rdempty;
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrfull = int_wrfull;
	wrptr_gs[] = ( (! wrptr_g[12..12].q), (! wrptr_g[11..11].q), wrptr_g[10..1].q);
END;
--VALID FILE
