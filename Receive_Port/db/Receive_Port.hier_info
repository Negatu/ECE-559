|test
clock25 => test_bench1:test_bench_inst.clk25
clock25 => MII_to_RCV:phy_inst.Clock25
clock50 => test_bench1:test_bench_inst.clk50
reset => test_bench1:test_bench_inst.reset
reset => MII_to_RCV:phy_inst.Resetx
length_buffer_out_11bit[0] <= test_bench1:test_bench_inst.length_buffer_out_11bit[0]
length_buffer_out_11bit[1] <= test_bench1:test_bench_inst.length_buffer_out_11bit[1]
length_buffer_out_11bit[2] <= test_bench1:test_bench_inst.length_buffer_out_11bit[2]
length_buffer_out_11bit[3] <= test_bench1:test_bench_inst.length_buffer_out_11bit[3]
length_buffer_out_11bit[4] <= test_bench1:test_bench_inst.length_buffer_out_11bit[4]
length_buffer_out_11bit[5] <= test_bench1:test_bench_inst.length_buffer_out_11bit[5]
length_buffer_out_11bit[6] <= test_bench1:test_bench_inst.length_buffer_out_11bit[6]
length_buffer_out_11bit[7] <= test_bench1:test_bench_inst.length_buffer_out_11bit[7]
length_buffer_out_11bit[8] <= test_bench1:test_bench_inst.length_buffer_out_11bit[8]
length_buffer_out_11bit[9] <= test_bench1:test_bench_inst.length_buffer_out_11bit[9]
length_buffer_out_11bit[10] <= test_bench1:test_bench_inst.length_buffer_out_11bit[10]
frame_valid_out <= test_bench1:test_bench_inst.frame_valid_out
data_buffer_out_8bit[0] <= test_bench1:test_bench_inst.data_buffer_out_8bit[0]
data_buffer_out_8bit[1] <= test_bench1:test_bench_inst.data_buffer_out_8bit[1]
data_buffer_out_8bit[2] <= test_bench1:test_bench_inst.data_buffer_out_8bit[2]
data_buffer_out_8bit[3] <= test_bench1:test_bench_inst.data_buffer_out_8bit[3]
data_buffer_out_8bit[4] <= test_bench1:test_bench_inst.data_buffer_out_8bit[4]
data_buffer_out_8bit[5] <= test_bench1:test_bench_inst.data_buffer_out_8bit[5]
data_buffer_out_8bit[6] <= test_bench1:test_bench_inst.data_buffer_out_8bit[6]
data_buffer_out_8bit[7] <= test_bench1:test_bench_inst.data_buffer_out_8bit[7]
frame_to_monitoring[0] <= test_bench1:test_bench_inst.frame_to_monitoring[0]
frame_to_monitoring[1] <= test_bench1:test_bench_inst.frame_to_monitoring[1]
frame_to_monitoring[2] <= test_bench1:test_bench_inst.frame_to_monitoring[2]
frame_to_monitoring[3] <= test_bench1:test_bench_inst.frame_to_monitoring[3]
frame_to_monitoring[4] <= test_bench1:test_bench_inst.frame_to_monitoring[4]
frame_to_monitoring[5] <= test_bench1:test_bench_inst.frame_to_monitoring[5]
frame_to_monitoring[6] <= test_bench1:test_bench_inst.frame_to_monitoring[6]
frame_to_monitoring[7] <= test_bench1:test_bench_inst.frame_to_monitoring[7]
frame_to_monitoring[8] <= test_bench1:test_bench_inst.frame_to_monitoring[8]
frame_to_monitoring[9] <= test_bench1:test_bench_inst.frame_to_monitoring[9]
frame_to_monitoring[10] <= test_bench1:test_bench_inst.frame_to_monitoring[10]
frame_to_monitoring[11] <= test_bench1:test_bench_inst.frame_to_monitoring[11]
frame_available_monitoring <= test_bench1:test_bench_inst.frame_available_monitoring
test_crc_rdv <= test_bench1:test_bench_inst.test_crc_rdv
test_length_value[0] <= test_bench1:test_bench_inst.test_length_value[0]
test_length_value[1] <= test_bench1:test_bench_inst.test_length_value[1]
test_length_value[2] <= test_bench1:test_bench_inst.test_length_value[2]
test_length_value[3] <= test_bench1:test_bench_inst.test_length_value[3]
test_length_value[4] <= test_bench1:test_bench_inst.test_length_value[4]
test_length_value[5] <= test_bench1:test_bench_inst.test_length_value[5]
test_length_value[6] <= test_bench1:test_bench_inst.test_length_value[6]
test_length_value[7] <= test_bench1:test_bench_inst.test_length_value[7]
test_length_value[8] <= test_bench1:test_bench_inst.test_length_value[8]
test_length_value[9] <= test_bench1:test_bench_inst.test_length_value[9]
test_length_value[10] <= test_bench1:test_bench_inst.test_length_value[10]
test_length_valid <= test_bench1:test_bench_inst.test_length_valid
test_length_we <= test_bench1:test_bench_inst.test_length_we
test_crc_crv <= test_bench1:test_bench_inst.test_crc_crv
test_crc_cr <= test_bench1:test_bench_inst.test_crc_cr
test_frame_valid <= test_bench1:test_bench_inst.test_frame_valid
test_input4bit[0] <= test_bench1:test_bench_inst.test_input4bit[0]
test_input4bit[1] <= test_bench1:test_bench_inst.test_input4bit[1]
test_input4bit[2] <= test_bench1:test_bench_inst.test_input4bit[2]
test_input4bit[3] <= test_bench1:test_bench_inst.test_input4bit[3]
test_sequence_counter[0] <= test_bench1:test_bench_inst.test_sequence_counter[0]
test_sequence_counter[1] <= test_bench1:test_bench_inst.test_sequence_counter[1]
test_sequence_counter[2] <= test_bench1:test_bench_inst.test_sequence_counter[2]
test_sequence_counter[3] <= test_bench1:test_bench_inst.test_sequence_counter[3]
test_sequence_counter[4] <= test_bench1:test_bench_inst.test_sequence_counter[4]
test_sequence_counter[5] <= test_bench1:test_bench_inst.test_sequence_counter[5]
test_sequence_counter[6] <= test_bench1:test_bench_inst.test_sequence_counter[6]
test_sequence_counter[7] <= test_bench1:test_bench_inst.test_sequence_counter[7]
test_sequence_counter[8] <= test_bench1:test_bench_inst.test_sequence_counter[8]
test_length_read_empty <= test_bench1:test_bench_inst.test_length_read_empty
test_data_read_empty <= test_bench1:test_bench_inst.test_data_read_empty
test_length_read_enable <= test_bench1:test_bench_inst.test_length_read_enable
test_data_read_enable <= test_bench1:test_bench_inst.test_data_read_enable
test_length_buffer_output[0] <= test_bench1:test_bench_inst.test_length_buffer_output[0]
test_length_buffer_output[1] <= test_bench1:test_bench_inst.test_length_buffer_output[1]
test_length_buffer_output[2] <= test_bench1:test_bench_inst.test_length_buffer_output[2]
test_length_buffer_output[3] <= test_bench1:test_bench_inst.test_length_buffer_output[3]
test_length_buffer_output[4] <= test_bench1:test_bench_inst.test_length_buffer_output[4]
test_length_buffer_output[5] <= test_bench1:test_bench_inst.test_length_buffer_output[5]
test_length_buffer_output[6] <= test_bench1:test_bench_inst.test_length_buffer_output[6]
test_length_buffer_output[7] <= test_bench1:test_bench_inst.test_length_buffer_output[7]
test_length_buffer_output[8] <= test_bench1:test_bench_inst.test_length_buffer_output[8]
test_length_buffer_output[9] <= test_bench1:test_bench_inst.test_length_buffer_output[9]
test_length_buffer_output[10] <= test_bench1:test_bench_inst.test_length_buffer_output[10]
test_length_buffer_output[11] <= test_bench1:test_bench_inst.test_length_buffer_output[11]
test_sequence_invalidBit <= test_bench1:test_bench_inst.test_sequence_invalidBit


|test|test_bench1:test_bench_inst
clk25 => SFD_FSM:sfd_fsm_inst.Clock
clk25 => CRC_System:crc_system_inst.Clk
clk25 => Data_Buffer:data_buffer_inst.write_clk
clk25 => Length_DCFF:length_buffer_inst.wrclk
clk25 => LengthCounterSystem:length_counter_sys_inst.clock
clk25 => shift1_1bit:shift1_1bit_instLengthWE.clock
clk25 => shift1_1bit:shift1_1bit_instLengthVal.clock
clk25 => SequenceNumberCounter:seq_counter_inst.Clk25Mhz
clk25 => FrameValidFSM:FrameValidFSM_inst.clk
clk25 => shift1_1bit:shift1_1bit_instCR.clock
clk25 => shift1_1bit:shift1_1bit_instLengthCRV.clock
clk50 => Data_Buffer:data_buffer_inst.read_clk
clk50 => Length_DCFF:length_buffer_inst.rdclk
clk50 => FwdOutputCntrlr:FwdOutputCntrlr_inst.clock
reset => SFD_FSM:sfd_fsm_inst.Reset
reset => CRC_System:crc_system_inst.reset
reset => Data_Buffer:data_buffer_inst.reset
reset => Length_DCFF:length_buffer_inst.aclr
reset => LengthCounterSystem:length_counter_sys_inst.reset
reset => shift1_1bit:shift1_1bit_instLengthWE.aclr
reset => shift1_1bit:shift1_1bit_instLengthVal.aclr
reset => FwdOutputCntrlr:FwdOutputCntrlr_inst.reset
reset => SequenceNumberCounter:seq_counter_inst.Reset
reset => FrameValidFSM:FrameValidFSM_inst.reset
reset => shift1_1bit:shift1_1bit_instCR.aclr
reset => shift1_1bit:shift1_1bit_instLengthCRV.aclr
rdv => SFD_FSM:sfd_fsm_inst.sfd_rdv
input_4bit[0] => SFD_FSM:sfd_fsm_inst.dataIn[0]
input_4bit[0] => test_input4bit[0].DATAIN
input_4bit[1] => SFD_FSM:sfd_fsm_inst.dataIn[1]
input_4bit[1] => test_input4bit[1].DATAIN
input_4bit[2] => SFD_FSM:sfd_fsm_inst.dataIn[2]
input_4bit[2] => test_input4bit[2].DATAIN
input_4bit[3] => SFD_FSM:sfd_fsm_inst.dataIn[3]
input_4bit[3] => test_input4bit[3].DATAIN
length_buffer_out_11bit[0] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[0]
length_buffer_out_11bit[1] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[1]
length_buffer_out_11bit[2] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[2]
length_buffer_out_11bit[3] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[3]
length_buffer_out_11bit[4] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[4]
length_buffer_out_11bit[5] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[5]
length_buffer_out_11bit[6] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[6]
length_buffer_out_11bit[7] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[7]
length_buffer_out_11bit[8] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[8]
length_buffer_out_11bit[9] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[9]
length_buffer_out_11bit[10] <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameLengthValue[10]
frame_valid_out <= FwdOutputCntrlr:FwdOutputCntrlr_inst.fwdFrameValid
data_buffer_out_8bit[0] <= Data_Buffer:data_buffer_inst.data_out_8[4]
data_buffer_out_8bit[1] <= Data_Buffer:data_buffer_inst.data_out_8[5]
data_buffer_out_8bit[2] <= Data_Buffer:data_buffer_inst.data_out_8[6]
data_buffer_out_8bit[3] <= Data_Buffer:data_buffer_inst.data_out_8[7]
data_buffer_out_8bit[4] <= Data_Buffer:data_buffer_inst.data_out_8[0]
data_buffer_out_8bit[5] <= Data_Buffer:data_buffer_inst.data_out_8[1]
data_buffer_out_8bit[6] <= Data_Buffer:data_buffer_inst.data_out_8[2]
data_buffer_out_8bit[7] <= Data_Buffer:data_buffer_inst.data_out_8[3]
frame_to_monitoring[0] <= FrameValidFSM:FrameValidFSM_inst.invalidBit
frame_to_monitoring[1] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[0]
frame_to_monitoring[2] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[1]
frame_to_monitoring[3] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[2]
frame_to_monitoring[4] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[3]
frame_to_monitoring[5] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[4]
frame_to_monitoring[6] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[5]
frame_to_monitoring[7] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[6]
frame_to_monitoring[8] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[7]
frame_to_monitoring[9] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[8]
frame_to_monitoring[10] <= <GND>
frame_to_monitoring[11] <= <GND>
frame_available_monitoring <= SequenceNumberCounter:seq_counter_inst.FrameAvailable
test_crc_rdv <= FwdOutputCntrlr:FwdOutputCntrlr_inst.dataBuffer_RE
test_length_value[0] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[0]
test_length_value[1] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[1]
test_length_value[2] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[2]
test_length_value[3] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[3]
test_length_value[4] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[4]
test_length_value[5] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[5]
test_length_value[6] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[6]
test_length_value[7] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[7]
test_length_value[8] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[8]
test_length_value[9] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[9]
test_length_value[10] <= LengthCounterSystem:length_counter_sys_inst.lengthValue[10]
test_length_valid <= shift1_1bit:shift1_1bit_instLengthVal.shiftout
test_length_we <= shift1_1bit:shift1_1bit_instLengthWE.shiftout
test_crc_crv <= shift1_1bit:shift1_1bit_instLengthCRV.shiftout
test_crc_cr <= shift1_1bit:shift1_1bit_instCR.shiftout
test_frame_valid <= FrameValidFSM:FrameValidFSM_inst.FrameValid
test_input4bit[0] <= input_4bit[0].DB_MAX_OUTPUT_PORT_TYPE
test_input4bit[1] <= input_4bit[1].DB_MAX_OUTPUT_PORT_TYPE
test_input4bit[2] <= input_4bit[2].DB_MAX_OUTPUT_PORT_TYPE
test_input4bit[3] <= input_4bit[3].DB_MAX_OUTPUT_PORT_TYPE
test_sequence_counter[0] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[0]
test_sequence_counter[1] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[1]
test_sequence_counter[2] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[2]
test_sequence_counter[3] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[3]
test_sequence_counter[4] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[4]
test_sequence_counter[5] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[5]
test_sequence_counter[6] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[6]
test_sequence_counter[7] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[7]
test_sequence_counter[8] <= SequenceNumberCounter:seq_counter_inst.SequenceCount[8]
test_length_read_empty <= Length_DCFF:length_buffer_inst.rdempty
test_data_read_empty <= Data_Buffer:data_buffer_inst.read_empty
test_length_read_enable <= FwdOutputCntrlr:FwdOutputCntrlr_inst.lengthBuffer_RE
test_data_read_enable <= FwdOutputCntrlr:FwdOutputCntrlr_inst.dataBuffer_RE
test_length_buffer_output[0] <= Length_DCFF:length_buffer_inst.q[0]
test_length_buffer_output[1] <= Length_DCFF:length_buffer_inst.q[1]
test_length_buffer_output[2] <= Length_DCFF:length_buffer_inst.q[2]
test_length_buffer_output[3] <= Length_DCFF:length_buffer_inst.q[3]
test_length_buffer_output[4] <= Length_DCFF:length_buffer_inst.q[4]
test_length_buffer_output[5] <= Length_DCFF:length_buffer_inst.q[5]
test_length_buffer_output[6] <= Length_DCFF:length_buffer_inst.q[6]
test_length_buffer_output[7] <= Length_DCFF:length_buffer_inst.q[7]
test_length_buffer_output[8] <= Length_DCFF:length_buffer_inst.q[8]
test_length_buffer_output[9] <= Length_DCFF:length_buffer_inst.q[9]
test_length_buffer_output[10] <= Length_DCFF:length_buffer_inst.q[10]
test_length_buffer_output[11] <= Length_DCFF:length_buffer_inst.q[11]
test_sequence_invalidBit <= FrameValidFSM:FrameValidFSM_inst.invalidBit


|test|test_bench1:test_bench_inst|SFD_FSM:sfd_fsm_inst
Clock => shift1_4bit:shift4bit_inst.clock
Clock => y_current~1.DATAIN
sfd_rdv => Selector1.IN2
sfd_rdv => shift1_4bit:shift4bit_inst.load
sfd_rdv => Selector0.IN2
Reset => y_current~3.DATAIN
dataIn[0] => shift1_4bit:shift4bit_inst.data[0]
dataIn[0] => Equal0.IN1
dataIn[0] => Equal1.IN3
dataIn[1] => shift1_4bit:shift4bit_inst.data[1]
dataIn[1] => Equal0.IN3
dataIn[1] => Equal1.IN2
dataIn[2] => shift1_4bit:shift4bit_inst.data[2]
dataIn[2] => Equal0.IN0
dataIn[2] => Equal1.IN0
dataIn[3] => shift1_4bit:shift4bit_inst.data[3]
dataIn[3] => Equal0.IN2
dataIn[3] => Equal1.IN1
dataOut[0] <= shift1_4bit:shift4bit_inst.q[0]
dataOut[1] <= shift1_4bit:shift4bit_inst.q[1]
dataOut[2] <= shift1_4bit:shift4bit_inst.q[2]
dataOut[3] <= shift1_4bit:shift4bit_inst.q[3]
crc_rdv <= crc_rdv.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|SFD_FSM:sfd_fsm_inst|shift1_4bit:shift4bit_inst
clock => lpm_shiftreg:lpm_shiftreg_component.clock
data[0] => lpm_shiftreg:lpm_shiftreg_component.data[0]
data[1] => lpm_shiftreg:lpm_shiftreg_component.data[1]
data[2] => lpm_shiftreg:lpm_shiftreg_component.data[2]
data[3] => lpm_shiftreg:lpm_shiftreg_component.data[3]
load => lpm_shiftreg:lpm_shiftreg_component.load
q[0] <= lpm_shiftreg:lpm_shiftreg_component.q[0]
q[1] <= lpm_shiftreg:lpm_shiftreg_component.q[1]
q[2] <= lpm_shiftreg:lpm_shiftreg_component.q[2]
q[3] <= lpm_shiftreg:lpm_shiftreg_component.q[3]


|test|test_bench1:test_bench_inst|SFD_FSM:sfd_fsm_inst|shift1_4bit:shift4bit_inst|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= shiftout.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst
Clk => CRC_FSM:CRC_FSM_inst.clk
Clk => crc32x4r:crc32x4r_inst.Clock
reset => CRC_FSM:CRC_FSM_inst.reset_sig
reset => crc32x4r:crc32x4r_inst.Reset
rdv => CRC_FSM:CRC_FSM_inst.rdv
data_in_4[0] => crc32x4r:crc32x4r_inst.u4[0]
data_in_4[1] => crc32x4r:crc32x4r_inst.u4[1]
data_in_4[2] => crc32x4r:crc32x4r_inst.u4[2]
data_in_4[3] => crc32x4r:crc32x4r_inst.u4[3]
CRC_result_valid <= CRC_FSM:CRC_FSM_inst.crv
CRC_check_result <= CRC_FSM:CRC_FSM_inst.check_result


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst|CRC_FSM:CRC_FSM_inst
clk => shift1_1bit:shift_check_result.clock
clk => state_reg~1.DATAIN
reset_sig => shift1_1bit:shift_check_result.aclr
reset_sig => state_reg~3.DATAIN
rdv => state_next.RUN.DATAB
rdv => Selector0.IN2
rdv => state_next.CHECK.DATAB
CRC_out[0] => WideOr1.IN0
CRC_out[1] => WideOr1.IN1
CRC_out[2] => WideOr1.IN2
CRC_out[3] => WideOr1.IN3
CRC_out[4] => WideOr1.IN4
CRC_out[5] => WideOr1.IN5
CRC_out[6] => WideOr1.IN6
CRC_out[7] => WideOr1.IN7
CRC_out[8] => WideOr1.IN8
CRC_out[9] => WideOr1.IN9
CRC_out[10] => WideOr1.IN10
CRC_out[11] => WideOr1.IN11
CRC_out[12] => WideOr1.IN12
CRC_out[13] => WideOr1.IN13
CRC_out[14] => WideOr1.IN14
CRC_out[15] => WideOr1.IN15
CRC_out[16] => WideOr1.IN16
CRC_out[17] => WideOr1.IN17
CRC_out[18] => WideOr1.IN18
CRC_out[19] => WideOr1.IN19
CRC_out[20] => WideOr1.IN20
CRC_out[21] => WideOr1.IN21
CRC_out[22] => WideOr1.IN22
CRC_out[23] => WideOr1.IN23
CRC_out[24] => WideOr1.IN24
CRC_out[25] => WideOr1.IN25
CRC_out[26] => WideOr1.IN26
CRC_out[27] => WideOr1.IN27
CRC_out[28] => WideOr1.IN28
CRC_out[29] => WideOr1.IN29
CRC_out[30] => WideOr1.IN30
CRC_out[31] => WideOr1.IN31
init_sig <= init_sig.DB_MAX_OUTPUT_PORT_TYPE
compute_enable <= compute_enable.DB_MAX_OUTPUT_PORT_TYPE
check_result <= shift1_1bit:shift_check_result.shiftout
crv <= crv.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst|CRC_FSM:CRC_FSM_inst|shift1_1bit:shift_check_result
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
shiftin => lpm_shiftreg:lpm_shiftreg_component.shiftin
shiftout <= lpm_shiftreg:lpm_shiftreg_component.shiftout


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst|CRC_FSM:CRC_FSM_inst|shift1_1bit:shift_check_result|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
clock => dffs[0].CLK
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
aclr => dffs[0].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst|crc32x4r:crc32x4r_inst
Clock => crcreg32:crcreg32r.clock
Reset => crcreg32:crcreg32r.aclr
compute_enable => crcreg_clock_enable.IN0
init => crcreg_clock_enable.IN1
init => crcreg32:crcreg32r.sset
u4[0] => Q_next[0].IN1
u4[1] => ux4[2].IN1
u4[2] => ux4[1].IN1
u4[3] => ux4[0].IN1
CRC_out[0] <= crcreg32:crcreg32r.q[0]
CRC_out[1] <= crcreg32:crcreg32r.q[1]
CRC_out[2] <= crcreg32:crcreg32r.q[2]
CRC_out[3] <= crcreg32:crcreg32r.q[3]
CRC_out[4] <= crcreg32:crcreg32r.q[4]
CRC_out[5] <= crcreg32:crcreg32r.q[5]
CRC_out[6] <= crcreg32:crcreg32r.q[6]
CRC_out[7] <= crcreg32:crcreg32r.q[7]
CRC_out[8] <= crcreg32:crcreg32r.q[8]
CRC_out[9] <= crcreg32:crcreg32r.q[9]
CRC_out[10] <= crcreg32:crcreg32r.q[10]
CRC_out[11] <= crcreg32:crcreg32r.q[11]
CRC_out[12] <= crcreg32:crcreg32r.q[12]
CRC_out[13] <= crcreg32:crcreg32r.q[13]
CRC_out[14] <= crcreg32:crcreg32r.q[14]
CRC_out[15] <= crcreg32:crcreg32r.q[15]
CRC_out[16] <= crcreg32:crcreg32r.q[16]
CRC_out[17] <= crcreg32:crcreg32r.q[17]
CRC_out[18] <= crcreg32:crcreg32r.q[18]
CRC_out[19] <= crcreg32:crcreg32r.q[19]
CRC_out[20] <= crcreg32:crcreg32r.q[20]
CRC_out[21] <= crcreg32:crcreg32r.q[21]
CRC_out[22] <= crcreg32:crcreg32r.q[22]
CRC_out[23] <= crcreg32:crcreg32r.q[23]
CRC_out[24] <= crcreg32:crcreg32r.q[24]
CRC_out[25] <= crcreg32:crcreg32r.q[25]
CRC_out[26] <= crcreg32:crcreg32r.q[26]
CRC_out[27] <= crcreg32:crcreg32r.q[27]
CRC_out[28] <= crcreg32:crcreg32r.q[28]
CRC_out[29] <= crcreg32:crcreg32r.q[29]
CRC_out[30] <= crcreg32:crcreg32r.q[30]
CRC_out[31] <= crcreg32:crcreg32r.q[31]


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst|crc32x4r:crc32x4r_inst|crcreg32:crcreg32r
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
data[0] => lpm_shiftreg:lpm_shiftreg_component.data[0]
data[1] => lpm_shiftreg:lpm_shiftreg_component.data[1]
data[2] => lpm_shiftreg:lpm_shiftreg_component.data[2]
data[3] => lpm_shiftreg:lpm_shiftreg_component.data[3]
data[4] => lpm_shiftreg:lpm_shiftreg_component.data[4]
data[5] => lpm_shiftreg:lpm_shiftreg_component.data[5]
data[6] => lpm_shiftreg:lpm_shiftreg_component.data[6]
data[7] => lpm_shiftreg:lpm_shiftreg_component.data[7]
data[8] => lpm_shiftreg:lpm_shiftreg_component.data[8]
data[9] => lpm_shiftreg:lpm_shiftreg_component.data[9]
data[10] => lpm_shiftreg:lpm_shiftreg_component.data[10]
data[11] => lpm_shiftreg:lpm_shiftreg_component.data[11]
data[12] => lpm_shiftreg:lpm_shiftreg_component.data[12]
data[13] => lpm_shiftreg:lpm_shiftreg_component.data[13]
data[14] => lpm_shiftreg:lpm_shiftreg_component.data[14]
data[15] => lpm_shiftreg:lpm_shiftreg_component.data[15]
data[16] => lpm_shiftreg:lpm_shiftreg_component.data[16]
data[17] => lpm_shiftreg:lpm_shiftreg_component.data[17]
data[18] => lpm_shiftreg:lpm_shiftreg_component.data[18]
data[19] => lpm_shiftreg:lpm_shiftreg_component.data[19]
data[20] => lpm_shiftreg:lpm_shiftreg_component.data[20]
data[21] => lpm_shiftreg:lpm_shiftreg_component.data[21]
data[22] => lpm_shiftreg:lpm_shiftreg_component.data[22]
data[23] => lpm_shiftreg:lpm_shiftreg_component.data[23]
data[24] => lpm_shiftreg:lpm_shiftreg_component.data[24]
data[25] => lpm_shiftreg:lpm_shiftreg_component.data[25]
data[26] => lpm_shiftreg:lpm_shiftreg_component.data[26]
data[27] => lpm_shiftreg:lpm_shiftreg_component.data[27]
data[28] => lpm_shiftreg:lpm_shiftreg_component.data[28]
data[29] => lpm_shiftreg:lpm_shiftreg_component.data[29]
data[30] => lpm_shiftreg:lpm_shiftreg_component.data[30]
data[31] => lpm_shiftreg:lpm_shiftreg_component.data[31]
enable => lpm_shiftreg:lpm_shiftreg_component.enable
load => lpm_shiftreg:lpm_shiftreg_component.load
sset => lpm_shiftreg:lpm_shiftreg_component.sset
q[0] <= lpm_shiftreg:lpm_shiftreg_component.q[0]
q[1] <= lpm_shiftreg:lpm_shiftreg_component.q[1]
q[2] <= lpm_shiftreg:lpm_shiftreg_component.q[2]
q[3] <= lpm_shiftreg:lpm_shiftreg_component.q[3]
q[4] <= lpm_shiftreg:lpm_shiftreg_component.q[4]
q[5] <= lpm_shiftreg:lpm_shiftreg_component.q[5]
q[6] <= lpm_shiftreg:lpm_shiftreg_component.q[6]
q[7] <= lpm_shiftreg:lpm_shiftreg_component.q[7]
q[8] <= lpm_shiftreg:lpm_shiftreg_component.q[8]
q[9] <= lpm_shiftreg:lpm_shiftreg_component.q[9]
q[10] <= lpm_shiftreg:lpm_shiftreg_component.q[10]
q[11] <= lpm_shiftreg:lpm_shiftreg_component.q[11]
q[12] <= lpm_shiftreg:lpm_shiftreg_component.q[12]
q[13] <= lpm_shiftreg:lpm_shiftreg_component.q[13]
q[14] <= lpm_shiftreg:lpm_shiftreg_component.q[14]
q[15] <= lpm_shiftreg:lpm_shiftreg_component.q[15]
q[16] <= lpm_shiftreg:lpm_shiftreg_component.q[16]
q[17] <= lpm_shiftreg:lpm_shiftreg_component.q[17]
q[18] <= lpm_shiftreg:lpm_shiftreg_component.q[18]
q[19] <= lpm_shiftreg:lpm_shiftreg_component.q[19]
q[20] <= lpm_shiftreg:lpm_shiftreg_component.q[20]
q[21] <= lpm_shiftreg:lpm_shiftreg_component.q[21]
q[22] <= lpm_shiftreg:lpm_shiftreg_component.q[22]
q[23] <= lpm_shiftreg:lpm_shiftreg_component.q[23]
q[24] <= lpm_shiftreg:lpm_shiftreg_component.q[24]
q[25] <= lpm_shiftreg:lpm_shiftreg_component.q[25]
q[26] <= lpm_shiftreg:lpm_shiftreg_component.q[26]
q[27] <= lpm_shiftreg:lpm_shiftreg_component.q[27]
q[28] <= lpm_shiftreg:lpm_shiftreg_component.q[28]
q[29] <= lpm_shiftreg:lpm_shiftreg_component.q[29]
q[30] <= lpm_shiftreg:lpm_shiftreg_component.q[30]
q[31] <= lpm_shiftreg:lpm_shiftreg_component.q[31]


|test|test_bench1:test_bench_inst|CRC_System:crc_system_inst|crc32x4r:crc32x4r_inst|crcreg32:crcreg32r|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
data[19] => _.IN1
data[20] => _.IN1
data[21] => _.IN1
data[22] => _.IN1
data[23] => _.IN1
data[24] => _.IN1
data[25] => _.IN1
data[26] => _.IN1
data[27] => _.IN1
data[28] => _.IN1
data[29] => _.IN1
data[30] => _.IN1
data[31] => _.IN1
clock => dffs[31].CLK
clock => dffs[30].CLK
clock => dffs[29].CLK
clock => dffs[28].CLK
clock => dffs[27].CLK
clock => dffs[26].CLK
clock => dffs[25].CLK
clock => dffs[24].CLK
clock => dffs[23].CLK
clock => dffs[22].CLK
clock => dffs[21].CLK
clock => dffs[20].CLK
clock => dffs[19].CLK
clock => dffs[18].CLK
clock => dffs[17].CLK
clock => dffs[16].CLK
clock => dffs[15].CLK
clock => dffs[14].CLK
clock => dffs[13].CLK
clock => dffs[12].CLK
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[31].ENA
enable => dffs[30].ENA
enable => dffs[29].ENA
enable => dffs[28].ENA
enable => dffs[27].ENA
enable => dffs[26].ENA
enable => dffs[25].ENA
enable => dffs[24].ENA
enable => dffs[23].ENA
enable => dffs[22].ENA
enable => dffs[21].ENA
enable => dffs[20].ENA
enable => dffs[19].ENA
enable => dffs[18].ENA
enable => dffs[17].ENA
enable => dffs[16].ENA
enable => dffs[15].ENA
enable => dffs[14].ENA
enable => dffs[13].ENA
enable => dffs[12].ENA
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[31].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffs[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffs[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= dffs[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= dffs[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= dffs[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= dffs[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= dffs[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= dffs[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= dffs[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= dffs[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= dffs[18].DB_MAX_OUTPUT_PORT_TYPE
q[19] <= dffs[19].DB_MAX_OUTPUT_PORT_TYPE
q[20] <= dffs[20].DB_MAX_OUTPUT_PORT_TYPE
q[21] <= dffs[21].DB_MAX_OUTPUT_PORT_TYPE
q[22] <= dffs[22].DB_MAX_OUTPUT_PORT_TYPE
q[23] <= dffs[23].DB_MAX_OUTPUT_PORT_TYPE
q[24] <= dffs[24].DB_MAX_OUTPUT_PORT_TYPE
q[25] <= dffs[25].DB_MAX_OUTPUT_PORT_TYPE
q[26] <= dffs[26].DB_MAX_OUTPUT_PORT_TYPE
q[27] <= dffs[27].DB_MAX_OUTPUT_PORT_TYPE
q[28] <= dffs[28].DB_MAX_OUTPUT_PORT_TYPE
q[29] <= dffs[29].DB_MAX_OUTPUT_PORT_TYPE
q[30] <= dffs[30].DB_MAX_OUTPUT_PORT_TYPE
q[31] <= dffs[31].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= shiftout.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst
reset => Data_DCFF:DCFF_inst.aclr
write_enable => Data_DCFF:DCFF_inst.wrreq
write_clk => Data_DCFF:DCFF_inst.wrclk
read_enable => Data_DCFF:DCFF_inst.rdreq
read_clk => Data_DCFF:DCFF_inst.rdclk
data_in_4[0] => Data_DCFF:DCFF_inst.data[0]
data_in_4[1] => Data_DCFF:DCFF_inst.data[1]
data_in_4[2] => Data_DCFF:DCFF_inst.data[2]
data_in_4[3] => Data_DCFF:DCFF_inst.data[3]
read_empty <= Data_DCFF:DCFF_inst.rdempty
write_full <= Data_DCFF:DCFF_inst.wrfull
data_out_8[0] <= Data_DCFF:DCFF_inst.q[0]
data_out_8[1] <= Data_DCFF:DCFF_inst.q[1]
data_out_8[2] <= Data_DCFF:DCFF_inst.q[2]
data_out_8[3] <= Data_DCFF:DCFF_inst.q[3]
data_out_8[4] <= Data_DCFF:DCFF_inst.q[4]
data_out_8[5] <= Data_DCFF:DCFF_inst.q[5]
data_out_8[6] <= Data_DCFF:DCFF_inst.q[6]
data_out_8[7] <= Data_DCFF:DCFF_inst.q[7]


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst
aclr => dcfifo_mixed_widths:dcfifo_mixed_widths_component.aclr
data[0] => dcfifo_mixed_widths:dcfifo_mixed_widths_component.data[0]
data[1] => dcfifo_mixed_widths:dcfifo_mixed_widths_component.data[1]
data[2] => dcfifo_mixed_widths:dcfifo_mixed_widths_component.data[2]
data[3] => dcfifo_mixed_widths:dcfifo_mixed_widths_component.data[3]
rdclk => dcfifo_mixed_widths:dcfifo_mixed_widths_component.rdclk
rdreq => dcfifo_mixed_widths:dcfifo_mixed_widths_component.rdreq
wrclk => dcfifo_mixed_widths:dcfifo_mixed_widths_component.wrclk
wrreq => dcfifo_mixed_widths:dcfifo_mixed_widths_component.wrreq
q[0] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[0]
q[1] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[1]
q[2] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[2]
q[3] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[3]
q[4] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[4]
q[5] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[5]
q[6] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[6]
q[7] <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.q[7]
rdempty <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.rdempty
wrfull <= dcfifo_mixed_widths:dcfifo_mixed_widths_component.wrfull


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component
aclr => dcfifo_30i1:auto_generated.aclr
data[0] => dcfifo_30i1:auto_generated.data[0]
data[1] => dcfifo_30i1:auto_generated.data[1]
data[2] => dcfifo_30i1:auto_generated.data[2]
data[3] => dcfifo_30i1:auto_generated.data[3]
q[0] <= dcfifo_30i1:auto_generated.q[0]
q[1] <= dcfifo_30i1:auto_generated.q[1]
q[2] <= dcfifo_30i1:auto_generated.q[2]
q[3] <= dcfifo_30i1:auto_generated.q[3]
q[4] <= dcfifo_30i1:auto_generated.q[4]
q[5] <= dcfifo_30i1:auto_generated.q[5]
q[6] <= dcfifo_30i1:auto_generated.q[6]
q[7] <= dcfifo_30i1:auto_generated.q[7]
rdclk => dcfifo_30i1:auto_generated.rdclk
rdempty <= dcfifo_30i1:auto_generated.rdempty
rdfull <= <GND>
rdreq => dcfifo_30i1:auto_generated.rdreq
rdusedw[0] <= <GND>
rdusedw[1] <= <GND>
rdusedw[2] <= <GND>
rdusedw[3] <= <GND>
rdusedw[4] <= <GND>
rdusedw[5] <= <GND>
rdusedw[6] <= <GND>
rdusedw[7] <= <GND>
rdusedw[8] <= <GND>
rdusedw[9] <= <GND>
rdusedw[10] <= <GND>
wrclk => dcfifo_30i1:auto_generated.wrclk
wrempty <= <GND>
wrfull <= dcfifo_30i1:auto_generated.wrfull
wrreq => dcfifo_30i1:auto_generated.wrreq
wrusedw[0] <= <GND>
wrusedw[1] <= <GND>
wrusedw[2] <= <GND>
wrusedw[3] <= <GND>
wrusedw[4] <= <GND>
wrusedw[5] <= <GND>
wrusedw[6] <= <GND>
wrusedw[7] <= <GND>
wrusedw[8] <= <GND>
wrusedw[9] <= <GND>
wrusedw[10] <= <GND>
wrusedw[11] <= <GND>


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated
aclr => a_graycounter_ggc:wrptr_g1p.aclr
aclr => altsyncram_qo61:fifo_ram.aclr1
aclr => delayed_wrptr_g[11].IN0
aclr => rdptr_g[11].IN0
aclr => wrptr_g[12].IN0
aclr => _.IN0
aclr => _.IN0
aclr => _.IN0
aclr => cntr_jvd:cntr_b.aset
data[0] => altsyncram_qo61:fifo_ram.data_a[0]
data[1] => altsyncram_qo61:fifo_ram.data_a[1]
data[2] => altsyncram_qo61:fifo_ram.data_a[2]
data[3] => altsyncram_qo61:fifo_ram.data_a[3]
q[0] <= altsyncram_qo61:fifo_ram.q_b[0]
q[1] <= altsyncram_qo61:fifo_ram.q_b[1]
q[2] <= altsyncram_qo61:fifo_ram.q_b[2]
q[3] <= altsyncram_qo61:fifo_ram.q_b[3]
q[4] <= altsyncram_qo61:fifo_ram.q_b[4]
q[5] <= altsyncram_qo61:fifo_ram.q_b[5]
q[6] <= altsyncram_qo61:fifo_ram.q_b[6]
q[7] <= altsyncram_qo61:fifo_ram.q_b[7]
rdclk => a_graycounter_q96:rdptr_g1p.clock
rdclk => altsyncram_qo61:fifo_ram.clock1
rdclk => _.IN0
rdclk => alt_synch_pipe_tdb:rs_dgwp.clock
rdclk => p0addr.CLK
rdclk => rdptr_g[11].CLK
rdclk => rdptr_g[10].CLK
rdclk => rdptr_g[9].CLK
rdclk => rdptr_g[8].CLK
rdclk => rdptr_g[7].CLK
rdclk => rdptr_g[6].CLK
rdclk => rdptr_g[5].CLK
rdclk => rdptr_g[4].CLK
rdclk => rdptr_g[3].CLK
rdclk => rdptr_g[2].CLK
rdclk => rdptr_g[1].CLK
rdclk => rdptr_g[0].CLK
rdempty <= int_rdempty.DB_MAX_OUTPUT_PORT_TYPE
rdreq => valid_rdreq.IN0
wrclk => a_graycounter_ggc:wrptr_g1p.clock
wrclk => altsyncram_qo61:fifo_ram.clock0
wrclk => alt_synch_pipe_1e8:ws_dgrp.clock
wrclk => cntr_jvd:cntr_b.clock
wrclk => delayed_wrptr_g[11].CLK
wrclk => delayed_wrptr_g[10].CLK
wrclk => delayed_wrptr_g[9].CLK
wrclk => delayed_wrptr_g[8].CLK
wrclk => delayed_wrptr_g[7].CLK
wrclk => delayed_wrptr_g[6].CLK
wrclk => delayed_wrptr_g[5].CLK
wrclk => delayed_wrptr_g[4].CLK
wrclk => delayed_wrptr_g[3].CLK
wrclk => delayed_wrptr_g[2].CLK
wrclk => delayed_wrptr_g[1].CLK
wrclk => delayed_wrptr_g[0].CLK
wrclk => wrptr_g[12].CLK
wrclk => wrptr_g[11].CLK
wrclk => wrptr_g[10].CLK
wrclk => wrptr_g[9].CLK
wrclk => wrptr_g[8].CLK
wrclk => wrptr_g[7].CLK
wrclk => wrptr_g[6].CLK
wrclk => wrptr_g[5].CLK
wrclk => wrptr_g[4].CLK
wrclk => wrptr_g[3].CLK
wrclk => wrptr_g[2].CLK
wrclk => wrptr_g[1].CLK
wrclk => wrptr_g[0].CLK
wrfull <= int_wrfull.DB_MAX_OUTPUT_PORT_TYPE
wrreq => valid_wrreq.IN0


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|a_graycounter_q96:rdptr_g1p
aclr => counter7a[11].IN0
aclr => counter7a[10].IN0
aclr => counter7a[9].IN0
aclr => counter7a[8].IN0
aclr => counter7a[7].IN0
aclr => counter7a[6].IN0
aclr => counter7a[5].IN0
aclr => counter7a[4].IN0
aclr => counter7a[3].IN0
aclr => counter7a[2].IN0
aclr => counter7a[1].IN0
aclr => counter7a[0].IN0
aclr => parity5.IN0
aclr => sub_parity6a1.IN0
aclr => sub_parity6a0.IN0
clock => counter7a[11].CLK
clock => counter7a[10].CLK
clock => counter7a[9].CLK
clock => counter7a[8].CLK
clock => counter7a[7].CLK
clock => counter7a[6].CLK
clock => counter7a[5].CLK
clock => counter7a[4].CLK
clock => counter7a[3].CLK
clock => counter7a[2].CLK
clock => counter7a[1].CLK
clock => counter7a[0].CLK
clock => parity5.CLK
clock => sub_parity6a0.CLK
clock => sub_parity6a1.CLK
clock => sub_parity6a2.CLK
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => cntr_cout[0].IN0
cnt_en => parity_cout.IN1
q[0] <= counter7a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter7a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter7a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter7a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter7a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter7a[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter7a[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter7a[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter7a[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter7a[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter7a[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter7a[11].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|a_graycounter_ggc:wrptr_g1p
aclr => counter10a[11].IN0
aclr => counter10a[10].IN0
aclr => counter10a[9].IN0
aclr => counter10a[8].IN0
aclr => counter10a[7].IN0
aclr => counter10a[6].IN0
aclr => counter10a[5].IN0
aclr => counter10a[4].IN0
aclr => counter10a[3].IN0
aclr => counter10a[2].IN0
aclr => counter10a[1].IN0
aclr => counter10a[0].IN0
aclr => parity8.IN0
aclr => sub_parity9a1.IN0
aclr => sub_parity9a0.IN0
clock => counter10a[11].CLK
clock => counter10a[10].CLK
clock => counter10a[9].CLK
clock => counter10a[8].CLK
clock => counter10a[7].CLK
clock => counter10a[6].CLK
clock => counter10a[5].CLK
clock => counter10a[4].CLK
clock => counter10a[3].CLK
clock => counter10a[2].CLK
clock => counter10a[1].CLK
clock => counter10a[0].CLK
clock => parity8.CLK
clock => sub_parity9a0.CLK
clock => sub_parity9a1.CLK
clock => sub_parity9a2.CLK
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => cntr_cout[0].IN0
cnt_en => parity_cout.IN1
q[0] <= counter10a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter10a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter10a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter10a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter10a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter10a[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter10a[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter10a[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter10a[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter10a[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter10a[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter10a[11].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|altsyncram_qo61:fifo_ram
aclr1 => altsyncram_6ve1:altsyncram11.aclr1
address_a[0] => altsyncram_6ve1:altsyncram11.address_b[0]
address_a[1] => altsyncram_6ve1:altsyncram11.address_b[1]
address_a[2] => altsyncram_6ve1:altsyncram11.address_b[2]
address_a[3] => altsyncram_6ve1:altsyncram11.address_b[3]
address_a[4] => altsyncram_6ve1:altsyncram11.address_b[4]
address_a[5] => altsyncram_6ve1:altsyncram11.address_b[5]
address_a[6] => altsyncram_6ve1:altsyncram11.address_b[6]
address_a[7] => altsyncram_6ve1:altsyncram11.address_b[7]
address_a[8] => altsyncram_6ve1:altsyncram11.address_b[8]
address_a[9] => altsyncram_6ve1:altsyncram11.address_b[9]
address_a[10] => altsyncram_6ve1:altsyncram11.address_b[10]
address_a[11] => altsyncram_6ve1:altsyncram11.address_b[11]
address_b[0] => altsyncram_6ve1:altsyncram11.address_a[0]
address_b[1] => altsyncram_6ve1:altsyncram11.address_a[1]
address_b[2] => altsyncram_6ve1:altsyncram11.address_a[2]
address_b[3] => altsyncram_6ve1:altsyncram11.address_a[3]
address_b[4] => altsyncram_6ve1:altsyncram11.address_a[4]
address_b[5] => altsyncram_6ve1:altsyncram11.address_a[5]
address_b[6] => altsyncram_6ve1:altsyncram11.address_a[6]
address_b[7] => altsyncram_6ve1:altsyncram11.address_a[7]
address_b[8] => altsyncram_6ve1:altsyncram11.address_a[8]
address_b[9] => altsyncram_6ve1:altsyncram11.address_a[9]
address_b[10] => altsyncram_6ve1:altsyncram11.address_a[10]
addressstall_b => altsyncram_6ve1:altsyncram11.addressstall_a
clock0 => altsyncram_6ve1:altsyncram11.clock1
clock1 => altsyncram_6ve1:altsyncram11.clock0
clocken1 => altsyncram_6ve1:altsyncram11.clocken0
data_a[0] => altsyncram_6ve1:altsyncram11.data_b[0]
data_a[1] => altsyncram_6ve1:altsyncram11.data_b[1]
data_a[2] => altsyncram_6ve1:altsyncram11.data_b[2]
data_a[3] => altsyncram_6ve1:altsyncram11.data_b[3]
q_b[0] <= altsyncram_6ve1:altsyncram11.q_a[0]
q_b[1] <= altsyncram_6ve1:altsyncram11.q_a[1]
q_b[2] <= altsyncram_6ve1:altsyncram11.q_a[2]
q_b[3] <= altsyncram_6ve1:altsyncram11.q_a[3]
q_b[4] <= altsyncram_6ve1:altsyncram11.q_a[4]
q_b[5] <= altsyncram_6ve1:altsyncram11.q_a[5]
q_b[6] <= altsyncram_6ve1:altsyncram11.q_a[6]
q_b[7] <= altsyncram_6ve1:altsyncram11.q_a[7]
wren_a => altsyncram_6ve1:altsyncram11.clocken1
wren_a => altsyncram_6ve1:altsyncram11.wren_b


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|altsyncram_qo61:fifo_ram|altsyncram_6ve1:altsyncram11
aclr1 => ram_block12a0.CLR1
aclr1 => ram_block12a1.CLR1
aclr1 => ram_block12a2.CLR1
aclr1 => ram_block12a3.CLR1
address_a[0] => ram_block12a0.PORTAADDR
address_a[0] => ram_block12a1.PORTAADDR
address_a[0] => ram_block12a2.PORTAADDR
address_a[0] => ram_block12a3.PORTAADDR
address_a[1] => ram_block12a0.PORTAADDR1
address_a[1] => ram_block12a1.PORTAADDR1
address_a[1] => ram_block12a2.PORTAADDR1
address_a[1] => ram_block12a3.PORTAADDR1
address_a[2] => ram_block12a0.PORTAADDR2
address_a[2] => ram_block12a1.PORTAADDR2
address_a[2] => ram_block12a2.PORTAADDR2
address_a[2] => ram_block12a3.PORTAADDR2
address_a[3] => ram_block12a0.PORTAADDR3
address_a[3] => ram_block12a1.PORTAADDR3
address_a[3] => ram_block12a2.PORTAADDR3
address_a[3] => ram_block12a3.PORTAADDR3
address_a[4] => ram_block12a0.PORTAADDR4
address_a[4] => ram_block12a1.PORTAADDR4
address_a[4] => ram_block12a2.PORTAADDR4
address_a[4] => ram_block12a3.PORTAADDR4
address_a[5] => ram_block12a0.PORTAADDR5
address_a[5] => ram_block12a1.PORTAADDR5
address_a[5] => ram_block12a2.PORTAADDR5
address_a[5] => ram_block12a3.PORTAADDR5
address_a[6] => ram_block12a0.PORTAADDR6
address_a[6] => ram_block12a1.PORTAADDR6
address_a[6] => ram_block12a2.PORTAADDR6
address_a[6] => ram_block12a3.PORTAADDR6
address_a[7] => ram_block12a0.PORTAADDR7
address_a[7] => ram_block12a1.PORTAADDR7
address_a[7] => ram_block12a2.PORTAADDR7
address_a[7] => ram_block12a3.PORTAADDR7
address_a[8] => ram_block12a0.PORTAADDR8
address_a[8] => ram_block12a1.PORTAADDR8
address_a[8] => ram_block12a2.PORTAADDR8
address_a[8] => ram_block12a3.PORTAADDR8
address_a[9] => ram_block12a0.PORTAADDR9
address_a[9] => ram_block12a1.PORTAADDR9
address_a[9] => ram_block12a2.PORTAADDR9
address_a[9] => ram_block12a3.PORTAADDR9
address_a[10] => ram_block12a0.PORTAADDR10
address_a[10] => ram_block12a1.PORTAADDR10
address_a[10] => ram_block12a2.PORTAADDR10
address_a[10] => ram_block12a3.PORTAADDR10
address_b[0] => ram_block12a0.PORTBADDR
address_b[0] => ram_block12a1.PORTBADDR
address_b[0] => ram_block12a2.PORTBADDR
address_b[0] => ram_block12a3.PORTBADDR
address_b[1] => ram_block12a0.PORTBADDR1
address_b[1] => ram_block12a1.PORTBADDR1
address_b[1] => ram_block12a2.PORTBADDR1
address_b[1] => ram_block12a3.PORTBADDR1
address_b[2] => ram_block12a0.PORTBADDR2
address_b[2] => ram_block12a1.PORTBADDR2
address_b[2] => ram_block12a2.PORTBADDR2
address_b[2] => ram_block12a3.PORTBADDR2
address_b[3] => ram_block12a0.PORTBADDR3
address_b[3] => ram_block12a1.PORTBADDR3
address_b[3] => ram_block12a2.PORTBADDR3
address_b[3] => ram_block12a3.PORTBADDR3
address_b[4] => ram_block12a0.PORTBADDR4
address_b[4] => ram_block12a1.PORTBADDR4
address_b[4] => ram_block12a2.PORTBADDR4
address_b[4] => ram_block12a3.PORTBADDR4
address_b[5] => ram_block12a0.PORTBADDR5
address_b[5] => ram_block12a1.PORTBADDR5
address_b[5] => ram_block12a2.PORTBADDR5
address_b[5] => ram_block12a3.PORTBADDR5
address_b[6] => ram_block12a0.PORTBADDR6
address_b[6] => ram_block12a1.PORTBADDR6
address_b[6] => ram_block12a2.PORTBADDR6
address_b[6] => ram_block12a3.PORTBADDR6
address_b[7] => ram_block12a0.PORTBADDR7
address_b[7] => ram_block12a1.PORTBADDR7
address_b[7] => ram_block12a2.PORTBADDR7
address_b[7] => ram_block12a3.PORTBADDR7
address_b[8] => ram_block12a0.PORTBADDR8
address_b[8] => ram_block12a1.PORTBADDR8
address_b[8] => ram_block12a2.PORTBADDR8
address_b[8] => ram_block12a3.PORTBADDR8
address_b[9] => ram_block12a0.PORTBADDR9
address_b[9] => ram_block12a1.PORTBADDR9
address_b[9] => ram_block12a2.PORTBADDR9
address_b[9] => ram_block12a3.PORTBADDR9
address_b[10] => ram_block12a0.PORTBADDR10
address_b[10] => ram_block12a1.PORTBADDR10
address_b[10] => ram_block12a2.PORTBADDR10
address_b[10] => ram_block12a3.PORTBADDR10
address_b[11] => ram_block12a0.PORTBADDR11
address_b[11] => ram_block12a1.PORTBADDR11
address_b[11] => ram_block12a2.PORTBADDR11
address_b[11] => ram_block12a3.PORTBADDR11
addressstall_a => ram_block12a0.PORTAADDRSTALL
addressstall_a => ram_block12a1.PORTAADDRSTALL
addressstall_a => ram_block12a2.PORTAADDRSTALL
addressstall_a => ram_block12a3.PORTAADDRSTALL
clock0 => ram_block12a0.CLK0
clock0 => ram_block12a1.CLK0
clock0 => ram_block12a2.CLK0
clock0 => ram_block12a3.CLK0
clock1 => ram_block12a0.CLK1
clock1 => ram_block12a1.CLK1
clock1 => ram_block12a2.CLK1
clock1 => ram_block12a3.CLK1
clocken0 => ram_block12a0.ENA0
clocken0 => ram_block12a1.ENA0
clocken0 => ram_block12a2.ENA0
clocken0 => ram_block12a3.ENA0
clocken1 => ram_block12a0.ENA1
clocken1 => ram_block12a1.ENA1
clocken1 => ram_block12a2.ENA1
clocken1 => ram_block12a3.ENA1
data_a[0] => ram_block12a0.PORTADATAIN
data_a[1] => ram_block12a1.PORTADATAIN
data_a[2] => ram_block12a2.PORTADATAIN
data_a[3] => ram_block12a3.PORTADATAIN
data_a[4] => ram_block12a0.PORTADATAIN1
data_a[5] => ram_block12a1.PORTADATAIN1
data_a[6] => ram_block12a2.PORTADATAIN1
data_a[7] => ram_block12a3.PORTADATAIN1
data_b[0] => ram_block12a0.PORTBDATAIN
data_b[1] => ram_block12a1.PORTBDATAIN
data_b[2] => ram_block12a2.PORTBDATAIN
data_b[3] => ram_block12a3.PORTBDATAIN
q_a[0] <= ram_block12a0.PORTADATAOUT
q_a[1] <= ram_block12a1.PORTADATAOUT
q_a[2] <= ram_block12a2.PORTADATAOUT
q_a[3] <= ram_block12a3.PORTADATAOUT
q_a[4] <= ram_block12a0.PORTADATAOUT1
q_a[5] <= ram_block12a1.PORTADATAOUT1
q_a[6] <= ram_block12a2.PORTADATAOUT1
q_a[7] <= ram_block12a3.PORTADATAOUT1
q_b[0] <= ram_block12a0.PORTBDATAOUT
q_b[1] <= ram_block12a1.PORTBDATAOUT
q_b[2] <= ram_block12a2.PORTBDATAOUT
q_b[3] <= ram_block12a3.PORTBDATAOUT
wren_a => ram_block12a0.PORTAWE
wren_a => ram_block12a1.PORTAWE
wren_a => ram_block12a2.PORTAWE
wren_a => ram_block12a3.PORTAWE
wren_b => ram_block12a0.PORTBRE
wren_b => ram_block12a1.PORTBRE
wren_b => ram_block12a2.PORTBRE
wren_b => ram_block12a3.PORTBRE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|dffpipe_ngh:rdaclr
clock => dffe13a[0].CLK
clrn => dffe13a[0].ACLR
d[0] => dffe13a[0].IN0
q[0] <= dffe13a[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|alt_synch_pipe_tdb:rs_dgwp
clock => dffpipe_re9:dffpipe14.clock
clrn => dffpipe_re9:dffpipe14.clrn
d[0] => dffpipe_re9:dffpipe14.d[0]
d[1] => dffpipe_re9:dffpipe14.d[1]
d[2] => dffpipe_re9:dffpipe14.d[2]
d[3] => dffpipe_re9:dffpipe14.d[3]
d[4] => dffpipe_re9:dffpipe14.d[4]
d[5] => dffpipe_re9:dffpipe14.d[5]
d[6] => dffpipe_re9:dffpipe14.d[6]
d[7] => dffpipe_re9:dffpipe14.d[7]
d[8] => dffpipe_re9:dffpipe14.d[8]
d[9] => dffpipe_re9:dffpipe14.d[9]
d[10] => dffpipe_re9:dffpipe14.d[10]
d[11] => dffpipe_re9:dffpipe14.d[11]
q[0] <= dffpipe_re9:dffpipe14.q[0]
q[1] <= dffpipe_re9:dffpipe14.q[1]
q[2] <= dffpipe_re9:dffpipe14.q[2]
q[3] <= dffpipe_re9:dffpipe14.q[3]
q[4] <= dffpipe_re9:dffpipe14.q[4]
q[5] <= dffpipe_re9:dffpipe14.q[5]
q[6] <= dffpipe_re9:dffpipe14.q[6]
q[7] <= dffpipe_re9:dffpipe14.q[7]
q[8] <= dffpipe_re9:dffpipe14.q[8]
q[9] <= dffpipe_re9:dffpipe14.q[9]
q[10] <= dffpipe_re9:dffpipe14.q[10]
q[11] <= dffpipe_re9:dffpipe14.q[11]


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|alt_synch_pipe_tdb:rs_dgwp|dffpipe_re9:dffpipe14
clock => dffe15a[11].CLK
clock => dffe15a[10].CLK
clock => dffe15a[9].CLK
clock => dffe15a[8].CLK
clock => dffe15a[7].CLK
clock => dffe15a[6].CLK
clock => dffe15a[5].CLK
clock => dffe15a[4].CLK
clock => dffe15a[3].CLK
clock => dffe15a[2].CLK
clock => dffe15a[1].CLK
clock => dffe15a[0].CLK
clock => dffe16a[11].CLK
clock => dffe16a[10].CLK
clock => dffe16a[9].CLK
clock => dffe16a[8].CLK
clock => dffe16a[7].CLK
clock => dffe16a[6].CLK
clock => dffe16a[5].CLK
clock => dffe16a[4].CLK
clock => dffe16a[3].CLK
clock => dffe16a[2].CLK
clock => dffe16a[1].CLK
clock => dffe16a[0].CLK
clrn => dffe15a[11].ACLR
clrn => dffe15a[10].ACLR
clrn => dffe15a[9].ACLR
clrn => dffe15a[8].ACLR
clrn => dffe15a[7].ACLR
clrn => dffe15a[6].ACLR
clrn => dffe15a[5].ACLR
clrn => dffe15a[4].ACLR
clrn => dffe15a[3].ACLR
clrn => dffe15a[2].ACLR
clrn => dffe15a[1].ACLR
clrn => dffe15a[0].ACLR
clrn => dffe16a[11].ACLR
clrn => dffe16a[10].ACLR
clrn => dffe16a[9].ACLR
clrn => dffe16a[8].ACLR
clrn => dffe16a[7].ACLR
clrn => dffe16a[6].ACLR
clrn => dffe16a[5].ACLR
clrn => dffe16a[4].ACLR
clrn => dffe16a[3].ACLR
clrn => dffe16a[2].ACLR
clrn => dffe16a[1].ACLR
clrn => dffe16a[0].ACLR
d[0] => dffe15a[0].IN0
d[1] => dffe15a[1].IN0
d[2] => dffe15a[2].IN0
d[3] => dffe15a[3].IN0
d[4] => dffe15a[4].IN0
d[5] => dffe15a[5].IN0
d[6] => dffe15a[6].IN0
d[7] => dffe15a[7].IN0
d[8] => dffe15a[8].IN0
d[9] => dffe15a[9].IN0
d[10] => dffe15a[10].IN0
d[11] => dffe15a[11].IN0
q[0] <= dffe16a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffe16a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffe16a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffe16a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffe16a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffe16a[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffe16a[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffe16a[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffe16a[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffe16a[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= dffe16a[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= dffe16a[11].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|alt_synch_pipe_1e8:ws_dgrp
clock => dffpipe_se9:dffpipe17.clock
clrn => dffpipe_se9:dffpipe17.clrn
d[0] => dffpipe_se9:dffpipe17.d[0]
d[1] => dffpipe_se9:dffpipe17.d[1]
d[2] => dffpipe_se9:dffpipe17.d[2]
d[3] => dffpipe_se9:dffpipe17.d[3]
d[4] => dffpipe_se9:dffpipe17.d[4]
d[5] => dffpipe_se9:dffpipe17.d[5]
d[6] => dffpipe_se9:dffpipe17.d[6]
d[7] => dffpipe_se9:dffpipe17.d[7]
d[8] => dffpipe_se9:dffpipe17.d[8]
d[9] => dffpipe_se9:dffpipe17.d[9]
d[10] => dffpipe_se9:dffpipe17.d[10]
d[11] => dffpipe_se9:dffpipe17.d[11]
q[0] <= dffpipe_se9:dffpipe17.q[0]
q[1] <= dffpipe_se9:dffpipe17.q[1]
q[2] <= dffpipe_se9:dffpipe17.q[2]
q[3] <= dffpipe_se9:dffpipe17.q[3]
q[4] <= dffpipe_se9:dffpipe17.q[4]
q[5] <= dffpipe_se9:dffpipe17.q[5]
q[6] <= dffpipe_se9:dffpipe17.q[6]
q[7] <= dffpipe_se9:dffpipe17.q[7]
q[8] <= dffpipe_se9:dffpipe17.q[8]
q[9] <= dffpipe_se9:dffpipe17.q[9]
q[10] <= dffpipe_se9:dffpipe17.q[10]
q[11] <= dffpipe_se9:dffpipe17.q[11]


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|alt_synch_pipe_1e8:ws_dgrp|dffpipe_se9:dffpipe17
clock => dffe18a[11].CLK
clock => dffe18a[10].CLK
clock => dffe18a[9].CLK
clock => dffe18a[8].CLK
clock => dffe18a[7].CLK
clock => dffe18a[6].CLK
clock => dffe18a[5].CLK
clock => dffe18a[4].CLK
clock => dffe18a[3].CLK
clock => dffe18a[2].CLK
clock => dffe18a[1].CLK
clock => dffe18a[0].CLK
clock => dffe19a[11].CLK
clock => dffe19a[10].CLK
clock => dffe19a[9].CLK
clock => dffe19a[8].CLK
clock => dffe19a[7].CLK
clock => dffe19a[6].CLK
clock => dffe19a[5].CLK
clock => dffe19a[4].CLK
clock => dffe19a[3].CLK
clock => dffe19a[2].CLK
clock => dffe19a[1].CLK
clock => dffe19a[0].CLK
clrn => dffe18a[11].ACLR
clrn => dffe18a[10].ACLR
clrn => dffe18a[9].ACLR
clrn => dffe18a[8].ACLR
clrn => dffe18a[7].ACLR
clrn => dffe18a[6].ACLR
clrn => dffe18a[5].ACLR
clrn => dffe18a[4].ACLR
clrn => dffe18a[3].ACLR
clrn => dffe18a[2].ACLR
clrn => dffe18a[1].ACLR
clrn => dffe18a[0].ACLR
clrn => dffe19a[11].ACLR
clrn => dffe19a[10].ACLR
clrn => dffe19a[9].ACLR
clrn => dffe19a[8].ACLR
clrn => dffe19a[7].ACLR
clrn => dffe19a[6].ACLR
clrn => dffe19a[5].ACLR
clrn => dffe19a[4].ACLR
clrn => dffe19a[3].ACLR
clrn => dffe19a[2].ACLR
clrn => dffe19a[1].ACLR
clrn => dffe19a[0].ACLR
d[0] => dffe18a[0].IN0
d[1] => dffe18a[1].IN0
d[2] => dffe18a[2].IN0
d[3] => dffe18a[3].IN0
d[4] => dffe18a[4].IN0
d[5] => dffe18a[5].IN0
d[6] => dffe18a[6].IN0
d[7] => dffe18a[7].IN0
d[8] => dffe18a[8].IN0
d[9] => dffe18a[9].IN0
d[10] => dffe18a[10].IN0
d[11] => dffe18a[11].IN0
q[0] <= dffe19a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffe19a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffe19a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffe19a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffe19a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffe19a[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffe19a[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffe19a[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffe19a[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffe19a[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= dffe19a[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= dffe19a[11].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|cmpr_736:rdempty_eq_comp
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[2].IN0
dataa[1] => data_wire[2].IN0
dataa[2] => data_wire[3].IN0
dataa[3] => data_wire[3].IN0
dataa[4] => data_wire[4].IN0
dataa[5] => data_wire[4].IN0
dataa[6] => data_wire[5].IN0
dataa[7] => data_wire[5].IN0
dataa[8] => data_wire[6].IN0
dataa[9] => data_wire[6].IN0
dataa[10] => data_wire[7].IN0
dataa[11] => data_wire[7].IN0
datab[0] => data_wire[2].IN1
datab[1] => data_wire[2].IN1
datab[2] => data_wire[3].IN1
datab[3] => data_wire[3].IN1
datab[4] => data_wire[4].IN1
datab[5] => data_wire[4].IN1
datab[6] => data_wire[5].IN1
datab[7] => data_wire[5].IN1
datab[8] => data_wire[6].IN1
datab[9] => data_wire[6].IN1
datab[10] => data_wire[7].IN1
datab[11] => data_wire[7].IN1


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|cmpr_736:wrfull_eq_comp
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[2].IN0
dataa[1] => data_wire[2].IN0
dataa[2] => data_wire[3].IN0
dataa[3] => data_wire[3].IN0
dataa[4] => data_wire[4].IN0
dataa[5] => data_wire[4].IN0
dataa[6] => data_wire[5].IN0
dataa[7] => data_wire[5].IN0
dataa[8] => data_wire[6].IN0
dataa[9] => data_wire[6].IN0
dataa[10] => data_wire[7].IN0
dataa[11] => data_wire[7].IN0
datab[0] => data_wire[2].IN1
datab[1] => data_wire[2].IN1
datab[2] => data_wire[3].IN1
datab[3] => data_wire[3].IN1
datab[4] => data_wire[4].IN1
datab[5] => data_wire[4].IN1
datab[6] => data_wire[5].IN1
datab[7] => data_wire[5].IN1
datab[8] => data_wire[6].IN1
datab[9] => data_wire[6].IN1
datab[10] => data_wire[7].IN1
datab[11] => data_wire[7].IN1


|test|test_bench1:test_bench_inst|Data_Buffer:data_buffer_inst|Data_DCFF:DCFF_inst|dcfifo_mixed_widths:dcfifo_mixed_widths_component|dcfifo_30i1:auto_generated|cntr_jvd:cntr_b
aset => counter_reg_bit20a[0].ACLR
clock => counter_reg_bit20a[0].CLK
cnt_en => _.IN0
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst
aclr => dcfifo:dcfifo_component.aclr
data[0] => dcfifo:dcfifo_component.data[0]
data[1] => dcfifo:dcfifo_component.data[1]
data[2] => dcfifo:dcfifo_component.data[2]
data[3] => dcfifo:dcfifo_component.data[3]
data[4] => dcfifo:dcfifo_component.data[4]
data[5] => dcfifo:dcfifo_component.data[5]
data[6] => dcfifo:dcfifo_component.data[6]
data[7] => dcfifo:dcfifo_component.data[7]
data[8] => dcfifo:dcfifo_component.data[8]
data[9] => dcfifo:dcfifo_component.data[9]
data[10] => dcfifo:dcfifo_component.data[10]
data[11] => dcfifo:dcfifo_component.data[11]
rdclk => dcfifo:dcfifo_component.rdclk
rdreq => dcfifo:dcfifo_component.rdreq
wrclk => dcfifo:dcfifo_component.wrclk
wrreq => dcfifo:dcfifo_component.wrreq
q[0] <= dcfifo:dcfifo_component.q[0]
q[1] <= dcfifo:dcfifo_component.q[1]
q[2] <= dcfifo:dcfifo_component.q[2]
q[3] <= dcfifo:dcfifo_component.q[3]
q[4] <= dcfifo:dcfifo_component.q[4]
q[5] <= dcfifo:dcfifo_component.q[5]
q[6] <= dcfifo:dcfifo_component.q[6]
q[7] <= dcfifo:dcfifo_component.q[7]
q[8] <= dcfifo:dcfifo_component.q[8]
q[9] <= dcfifo:dcfifo_component.q[9]
q[10] <= dcfifo:dcfifo_component.q[10]
q[11] <= dcfifo:dcfifo_component.q[11]
rdempty <= dcfifo:dcfifo_component.rdempty
wrfull <= dcfifo:dcfifo_component.wrfull


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component
data[0] => dcfifo_ksh1:auto_generated.data[0]
data[1] => dcfifo_ksh1:auto_generated.data[1]
data[2] => dcfifo_ksh1:auto_generated.data[2]
data[3] => dcfifo_ksh1:auto_generated.data[3]
data[4] => dcfifo_ksh1:auto_generated.data[4]
data[5] => dcfifo_ksh1:auto_generated.data[5]
data[6] => dcfifo_ksh1:auto_generated.data[6]
data[7] => dcfifo_ksh1:auto_generated.data[7]
data[8] => dcfifo_ksh1:auto_generated.data[8]
data[9] => dcfifo_ksh1:auto_generated.data[9]
data[10] => dcfifo_ksh1:auto_generated.data[10]
data[11] => dcfifo_ksh1:auto_generated.data[11]
q[0] <= dcfifo_ksh1:auto_generated.q[0]
q[1] <= dcfifo_ksh1:auto_generated.q[1]
q[2] <= dcfifo_ksh1:auto_generated.q[2]
q[3] <= dcfifo_ksh1:auto_generated.q[3]
q[4] <= dcfifo_ksh1:auto_generated.q[4]
q[5] <= dcfifo_ksh1:auto_generated.q[5]
q[6] <= dcfifo_ksh1:auto_generated.q[6]
q[7] <= dcfifo_ksh1:auto_generated.q[7]
q[8] <= dcfifo_ksh1:auto_generated.q[8]
q[9] <= dcfifo_ksh1:auto_generated.q[9]
q[10] <= dcfifo_ksh1:auto_generated.q[10]
q[11] <= dcfifo_ksh1:auto_generated.q[11]
rdclk => dcfifo_ksh1:auto_generated.rdclk
rdreq => dcfifo_ksh1:auto_generated.rdreq
wrclk => dcfifo_ksh1:auto_generated.wrclk
wrreq => dcfifo_ksh1:auto_generated.wrreq
aclr => dcfifo_ksh1:auto_generated.aclr
rdempty <= dcfifo_ksh1:auto_generated.rdempty
rdfull <= <UNC>
wrempty <= <GND>
wrfull <= dcfifo_ksh1:auto_generated.wrfull
rdusedw[0] <= <UNC>
rdusedw[1] <= <UNC>
rdusedw[2] <= <UNC>
rdusedw[3] <= <UNC>
rdusedw[4] <= <UNC>
wrusedw[0] <= <GND>
wrusedw[1] <= <GND>
wrusedw[2] <= <GND>
wrusedw[3] <= <GND>
wrusedw[4] <= <GND>


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated
aclr => a_graycounter_4fc:wrptr_g1p.aclr
aclr => a_graycounter_3fc:wrptr_gp.aclr
aclr => altsyncram_po61:fifo_ram.aclr1
aclr => delayed_wrptr_g[5].IN0
aclr => rdptr_g[5].IN0
aclr => _.IN0
aclr => _.IN0
aclr => _.IN0
data[0] => altsyncram_po61:fifo_ram.data_a[0]
data[1] => altsyncram_po61:fifo_ram.data_a[1]
data[2] => altsyncram_po61:fifo_ram.data_a[2]
data[3] => altsyncram_po61:fifo_ram.data_a[3]
data[4] => altsyncram_po61:fifo_ram.data_a[4]
data[5] => altsyncram_po61:fifo_ram.data_a[5]
data[6] => altsyncram_po61:fifo_ram.data_a[6]
data[7] => altsyncram_po61:fifo_ram.data_a[7]
data[8] => altsyncram_po61:fifo_ram.data_a[8]
data[9] => altsyncram_po61:fifo_ram.data_a[9]
data[10] => altsyncram_po61:fifo_ram.data_a[10]
data[11] => altsyncram_po61:fifo_ram.data_a[11]
q[0] <= altsyncram_po61:fifo_ram.q_b[0]
q[1] <= altsyncram_po61:fifo_ram.q_b[1]
q[2] <= altsyncram_po61:fifo_ram.q_b[2]
q[3] <= altsyncram_po61:fifo_ram.q_b[3]
q[4] <= altsyncram_po61:fifo_ram.q_b[4]
q[5] <= altsyncram_po61:fifo_ram.q_b[5]
q[6] <= altsyncram_po61:fifo_ram.q_b[6]
q[7] <= altsyncram_po61:fifo_ram.q_b[7]
q[8] <= altsyncram_po61:fifo_ram.q_b[8]
q[9] <= altsyncram_po61:fifo_ram.q_b[9]
q[10] <= altsyncram_po61:fifo_ram.q_b[10]
q[11] <= altsyncram_po61:fifo_ram.q_b[11]
rdclk => a_graycounter_d86:rdptr_g1p.clock
rdclk => altsyncram_po61:fifo_ram.clock1
rdclk => _.IN0
rdclk => alt_synch_pipe_gcb:rs_dgwp.clock
rdclk => p0addr.CLK
rdclk => rdptr_g[5].CLK
rdclk => rdptr_g[4].CLK
rdclk => rdptr_g[3].CLK
rdclk => rdptr_g[2].CLK
rdclk => rdptr_g[1].CLK
rdclk => rdptr_g[0].CLK
rdempty <= int_rdempty.DB_MAX_OUTPUT_PORT_TYPE
rdreq => valid_rdreq.IN0
wrclk => a_graycounter_4fc:wrptr_g1p.clock
wrclk => a_graycounter_3fc:wrptr_gp.clock
wrclk => altsyncram_po61:fifo_ram.clock0
wrclk => alt_synch_pipe_kc8:ws_dgrp.clock
wrclk => delayed_wrptr_g[5].CLK
wrclk => delayed_wrptr_g[4].CLK
wrclk => delayed_wrptr_g[3].CLK
wrclk => delayed_wrptr_g[2].CLK
wrclk => delayed_wrptr_g[1].CLK
wrclk => delayed_wrptr_g[0].CLK
wrfull <= int_wrfull.DB_MAX_OUTPUT_PORT_TYPE
wrreq => valid_wrreq.IN0


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|a_graycounter_d86:rdptr_g1p
aclr => counter7a[5].IN0
aclr => counter7a[4].IN0
aclr => counter7a[3].IN0
aclr => counter7a[2].IN0
aclr => counter7a[1].IN0
aclr => counter7a[0].IN0
aclr => parity5.IN0
aclr => sub_parity6a1.IN0
aclr => sub_parity6a0.IN0
clock => counter7a[5].CLK
clock => counter7a[4].CLK
clock => counter7a[3].CLK
clock => counter7a[2].CLK
clock => counter7a[1].CLK
clock => counter7a[0].CLK
clock => parity5.CLK
clock => sub_parity6a0.CLK
clock => sub_parity6a1.CLK
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => cntr_cout[0].IN0
cnt_en => parity_cout.IN1
q[0] <= counter7a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter7a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter7a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter7a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter7a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter7a[5].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|a_graycounter_4fc:wrptr_g1p
aclr => counter8a1.IN0
aclr => counter8a0.IN0
aclr => parity9.IN0
aclr => sub_parity10a[1].IN0
aclr => sub_parity10a[0].IN0
clock => counter8a0.CLK
clock => counter8a1.CLK
clock => counter8a2.CLK
clock => counter8a3.CLK
clock => counter8a4.CLK
clock => counter8a5.CLK
clock => parity9.CLK
clock => sub_parity10a[1].CLK
clock => sub_parity10a[0].CLK
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => cntr_cout[0].IN0
cnt_en => parity_cout.IN1
q[0] <= counter8a0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter8a1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter8a2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter8a3.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter8a4.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter8a5.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|a_graycounter_3fc:wrptr_gp
aclr => counter13a[5].IN0
aclr => counter13a[4].IN0
aclr => counter13a[3].IN0
aclr => counter13a[2].IN0
aclr => counter13a[1].IN0
aclr => counter13a[0].IN0
aclr => parity11.IN0
aclr => sub_parity12a1.IN0
aclr => sub_parity12a0.IN0
clock => counter13a[5].CLK
clock => counter13a[4].CLK
clock => counter13a[3].CLK
clock => counter13a[2].CLK
clock => counter13a[1].CLK
clock => counter13a[0].CLK
clock => parity11.CLK
clock => sub_parity12a0.CLK
clock => sub_parity12a1.CLK
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => _.IN0
cnt_en => cntr_cout[0].IN0
cnt_en => parity_cout.IN1
q[0] <= counter13a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter13a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter13a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter13a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter13a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter13a[5].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|altsyncram_po61:fifo_ram
aclr1 => ram_block14a0.CLR1
aclr1 => ram_block14a1.CLR1
aclr1 => ram_block14a2.CLR1
aclr1 => ram_block14a3.CLR1
aclr1 => ram_block14a4.CLR1
aclr1 => ram_block14a5.CLR1
aclr1 => ram_block14a6.CLR1
aclr1 => ram_block14a7.CLR1
aclr1 => ram_block14a8.CLR1
aclr1 => ram_block14a9.CLR1
aclr1 => ram_block14a10.CLR1
aclr1 => ram_block14a11.CLR1
address_a[0] => ram_block14a0.PORTAADDR
address_a[0] => ram_block14a1.PORTAADDR
address_a[0] => ram_block14a2.PORTAADDR
address_a[0] => ram_block14a3.PORTAADDR
address_a[0] => ram_block14a4.PORTAADDR
address_a[0] => ram_block14a5.PORTAADDR
address_a[0] => ram_block14a6.PORTAADDR
address_a[0] => ram_block14a7.PORTAADDR
address_a[0] => ram_block14a8.PORTAADDR
address_a[0] => ram_block14a9.PORTAADDR
address_a[0] => ram_block14a10.PORTAADDR
address_a[0] => ram_block14a11.PORTAADDR
address_a[1] => ram_block14a0.PORTAADDR1
address_a[1] => ram_block14a1.PORTAADDR1
address_a[1] => ram_block14a2.PORTAADDR1
address_a[1] => ram_block14a3.PORTAADDR1
address_a[1] => ram_block14a4.PORTAADDR1
address_a[1] => ram_block14a5.PORTAADDR1
address_a[1] => ram_block14a6.PORTAADDR1
address_a[1] => ram_block14a7.PORTAADDR1
address_a[1] => ram_block14a8.PORTAADDR1
address_a[1] => ram_block14a9.PORTAADDR1
address_a[1] => ram_block14a10.PORTAADDR1
address_a[1] => ram_block14a11.PORTAADDR1
address_a[2] => ram_block14a0.PORTAADDR2
address_a[2] => ram_block14a1.PORTAADDR2
address_a[2] => ram_block14a2.PORTAADDR2
address_a[2] => ram_block14a3.PORTAADDR2
address_a[2] => ram_block14a4.PORTAADDR2
address_a[2] => ram_block14a5.PORTAADDR2
address_a[2] => ram_block14a6.PORTAADDR2
address_a[2] => ram_block14a7.PORTAADDR2
address_a[2] => ram_block14a8.PORTAADDR2
address_a[2] => ram_block14a9.PORTAADDR2
address_a[2] => ram_block14a10.PORTAADDR2
address_a[2] => ram_block14a11.PORTAADDR2
address_a[3] => ram_block14a0.PORTAADDR3
address_a[3] => ram_block14a1.PORTAADDR3
address_a[3] => ram_block14a2.PORTAADDR3
address_a[3] => ram_block14a3.PORTAADDR3
address_a[3] => ram_block14a4.PORTAADDR3
address_a[3] => ram_block14a5.PORTAADDR3
address_a[3] => ram_block14a6.PORTAADDR3
address_a[3] => ram_block14a7.PORTAADDR3
address_a[3] => ram_block14a8.PORTAADDR3
address_a[3] => ram_block14a9.PORTAADDR3
address_a[3] => ram_block14a10.PORTAADDR3
address_a[3] => ram_block14a11.PORTAADDR3
address_a[4] => ram_block14a0.PORTAADDR4
address_a[4] => ram_block14a1.PORTAADDR4
address_a[4] => ram_block14a2.PORTAADDR4
address_a[4] => ram_block14a3.PORTAADDR4
address_a[4] => ram_block14a4.PORTAADDR4
address_a[4] => ram_block14a5.PORTAADDR4
address_a[4] => ram_block14a6.PORTAADDR4
address_a[4] => ram_block14a7.PORTAADDR4
address_a[4] => ram_block14a8.PORTAADDR4
address_a[4] => ram_block14a9.PORTAADDR4
address_a[4] => ram_block14a10.PORTAADDR4
address_a[4] => ram_block14a11.PORTAADDR4
address_b[0] => ram_block14a0.PORTBADDR
address_b[0] => ram_block14a1.PORTBADDR
address_b[0] => ram_block14a2.PORTBADDR
address_b[0] => ram_block14a3.PORTBADDR
address_b[0] => ram_block14a4.PORTBADDR
address_b[0] => ram_block14a5.PORTBADDR
address_b[0] => ram_block14a6.PORTBADDR
address_b[0] => ram_block14a7.PORTBADDR
address_b[0] => ram_block14a8.PORTBADDR
address_b[0] => ram_block14a9.PORTBADDR
address_b[0] => ram_block14a10.PORTBADDR
address_b[0] => ram_block14a11.PORTBADDR
address_b[1] => ram_block14a0.PORTBADDR1
address_b[1] => ram_block14a1.PORTBADDR1
address_b[1] => ram_block14a2.PORTBADDR1
address_b[1] => ram_block14a3.PORTBADDR1
address_b[1] => ram_block14a4.PORTBADDR1
address_b[1] => ram_block14a5.PORTBADDR1
address_b[1] => ram_block14a6.PORTBADDR1
address_b[1] => ram_block14a7.PORTBADDR1
address_b[1] => ram_block14a8.PORTBADDR1
address_b[1] => ram_block14a9.PORTBADDR1
address_b[1] => ram_block14a10.PORTBADDR1
address_b[1] => ram_block14a11.PORTBADDR1
address_b[2] => ram_block14a0.PORTBADDR2
address_b[2] => ram_block14a1.PORTBADDR2
address_b[2] => ram_block14a2.PORTBADDR2
address_b[2] => ram_block14a3.PORTBADDR2
address_b[2] => ram_block14a4.PORTBADDR2
address_b[2] => ram_block14a5.PORTBADDR2
address_b[2] => ram_block14a6.PORTBADDR2
address_b[2] => ram_block14a7.PORTBADDR2
address_b[2] => ram_block14a8.PORTBADDR2
address_b[2] => ram_block14a9.PORTBADDR2
address_b[2] => ram_block14a10.PORTBADDR2
address_b[2] => ram_block14a11.PORTBADDR2
address_b[3] => ram_block14a0.PORTBADDR3
address_b[3] => ram_block14a1.PORTBADDR3
address_b[3] => ram_block14a2.PORTBADDR3
address_b[3] => ram_block14a3.PORTBADDR3
address_b[3] => ram_block14a4.PORTBADDR3
address_b[3] => ram_block14a5.PORTBADDR3
address_b[3] => ram_block14a6.PORTBADDR3
address_b[3] => ram_block14a7.PORTBADDR3
address_b[3] => ram_block14a8.PORTBADDR3
address_b[3] => ram_block14a9.PORTBADDR3
address_b[3] => ram_block14a10.PORTBADDR3
address_b[3] => ram_block14a11.PORTBADDR3
address_b[4] => ram_block14a0.PORTBADDR4
address_b[4] => ram_block14a1.PORTBADDR4
address_b[4] => ram_block14a2.PORTBADDR4
address_b[4] => ram_block14a3.PORTBADDR4
address_b[4] => ram_block14a4.PORTBADDR4
address_b[4] => ram_block14a5.PORTBADDR4
address_b[4] => ram_block14a6.PORTBADDR4
address_b[4] => ram_block14a7.PORTBADDR4
address_b[4] => ram_block14a8.PORTBADDR4
address_b[4] => ram_block14a9.PORTBADDR4
address_b[4] => ram_block14a10.PORTBADDR4
address_b[4] => ram_block14a11.PORTBADDR4
addressstall_b => ram_block14a0.PORTBADDRSTALL
addressstall_b => ram_block14a1.PORTBADDRSTALL
addressstall_b => ram_block14a2.PORTBADDRSTALL
addressstall_b => ram_block14a3.PORTBADDRSTALL
addressstall_b => ram_block14a4.PORTBADDRSTALL
addressstall_b => ram_block14a5.PORTBADDRSTALL
addressstall_b => ram_block14a6.PORTBADDRSTALL
addressstall_b => ram_block14a7.PORTBADDRSTALL
addressstall_b => ram_block14a8.PORTBADDRSTALL
addressstall_b => ram_block14a9.PORTBADDRSTALL
addressstall_b => ram_block14a10.PORTBADDRSTALL
addressstall_b => ram_block14a11.PORTBADDRSTALL
clock0 => ram_block14a0.CLK0
clock0 => ram_block14a1.CLK0
clock0 => ram_block14a2.CLK0
clock0 => ram_block14a3.CLK0
clock0 => ram_block14a4.CLK0
clock0 => ram_block14a5.CLK0
clock0 => ram_block14a6.CLK0
clock0 => ram_block14a7.CLK0
clock0 => ram_block14a8.CLK0
clock0 => ram_block14a9.CLK0
clock0 => ram_block14a10.CLK0
clock0 => ram_block14a11.CLK0
clock1 => ram_block14a0.CLK1
clock1 => ram_block14a1.CLK1
clock1 => ram_block14a2.CLK1
clock1 => ram_block14a3.CLK1
clock1 => ram_block14a4.CLK1
clock1 => ram_block14a5.CLK1
clock1 => ram_block14a6.CLK1
clock1 => ram_block14a7.CLK1
clock1 => ram_block14a8.CLK1
clock1 => ram_block14a9.CLK1
clock1 => ram_block14a10.CLK1
clock1 => ram_block14a11.CLK1
clocken1 => ram_block14a0.ENA1
clocken1 => ram_block14a1.ENA1
clocken1 => ram_block14a2.ENA1
clocken1 => ram_block14a3.ENA1
clocken1 => ram_block14a4.ENA1
clocken1 => ram_block14a5.ENA1
clocken1 => ram_block14a6.ENA1
clocken1 => ram_block14a7.ENA1
clocken1 => ram_block14a8.ENA1
clocken1 => ram_block14a9.ENA1
clocken1 => ram_block14a10.ENA1
clocken1 => ram_block14a11.ENA1
data_a[0] => ram_block14a0.PORTADATAIN
data_a[1] => ram_block14a1.PORTADATAIN
data_a[2] => ram_block14a2.PORTADATAIN
data_a[3] => ram_block14a3.PORTADATAIN
data_a[4] => ram_block14a4.PORTADATAIN
data_a[5] => ram_block14a5.PORTADATAIN
data_a[6] => ram_block14a6.PORTADATAIN
data_a[7] => ram_block14a7.PORTADATAIN
data_a[8] => ram_block14a8.PORTADATAIN
data_a[9] => ram_block14a9.PORTADATAIN
data_a[10] => ram_block14a10.PORTADATAIN
data_a[11] => ram_block14a11.PORTADATAIN
q_b[0] <= ram_block14a0.PORTBDATAOUT
q_b[1] <= ram_block14a1.PORTBDATAOUT
q_b[2] <= ram_block14a2.PORTBDATAOUT
q_b[3] <= ram_block14a3.PORTBDATAOUT
q_b[4] <= ram_block14a4.PORTBDATAOUT
q_b[5] <= ram_block14a5.PORTBDATAOUT
q_b[6] <= ram_block14a6.PORTBDATAOUT
q_b[7] <= ram_block14a7.PORTBDATAOUT
q_b[8] <= ram_block14a8.PORTBDATAOUT
q_b[9] <= ram_block14a9.PORTBDATAOUT
q_b[10] <= ram_block14a10.PORTBDATAOUT
q_b[11] <= ram_block14a11.PORTBDATAOUT
wren_a => ram_block14a0.PORTAWE
wren_a => ram_block14a0.ENA0
wren_a => ram_block14a1.PORTAWE
wren_a => ram_block14a1.ENA0
wren_a => ram_block14a2.PORTAWE
wren_a => ram_block14a2.ENA0
wren_a => ram_block14a3.PORTAWE
wren_a => ram_block14a3.ENA0
wren_a => ram_block14a4.PORTAWE
wren_a => ram_block14a4.ENA0
wren_a => ram_block14a5.PORTAWE
wren_a => ram_block14a5.ENA0
wren_a => ram_block14a6.PORTAWE
wren_a => ram_block14a6.ENA0
wren_a => ram_block14a7.PORTAWE
wren_a => ram_block14a7.ENA0
wren_a => ram_block14a8.PORTAWE
wren_a => ram_block14a8.ENA0
wren_a => ram_block14a9.PORTAWE
wren_a => ram_block14a9.ENA0
wren_a => ram_block14a10.PORTAWE
wren_a => ram_block14a10.ENA0
wren_a => ram_block14a11.PORTAWE
wren_a => ram_block14a11.ENA0


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|dffpipe_ngh:rdaclr
clock => dffe13a[0].CLK
clrn => dffe13a[0].ACLR
d[0] => dffe13a[0].IN0
q[0] <= dffe13a[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|alt_synch_pipe_gcb:rs_dgwp
clock => dffpipe_ed9:dffpipe15.clock
clrn => dffpipe_ed9:dffpipe15.clrn
d[0] => dffpipe_ed9:dffpipe15.d[0]
d[1] => dffpipe_ed9:dffpipe15.d[1]
d[2] => dffpipe_ed9:dffpipe15.d[2]
d[3] => dffpipe_ed9:dffpipe15.d[3]
d[4] => dffpipe_ed9:dffpipe15.d[4]
d[5] => dffpipe_ed9:dffpipe15.d[5]
q[0] <= dffpipe_ed9:dffpipe15.q[0]
q[1] <= dffpipe_ed9:dffpipe15.q[1]
q[2] <= dffpipe_ed9:dffpipe15.q[2]
q[3] <= dffpipe_ed9:dffpipe15.q[3]
q[4] <= dffpipe_ed9:dffpipe15.q[4]
q[5] <= dffpipe_ed9:dffpipe15.q[5]


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|alt_synch_pipe_gcb:rs_dgwp|dffpipe_ed9:dffpipe15
clock => dffe16a[5].CLK
clock => dffe16a[4].CLK
clock => dffe16a[3].CLK
clock => dffe16a[2].CLK
clock => dffe16a[1].CLK
clock => dffe16a[0].CLK
clock => dffe17a[5].CLK
clock => dffe17a[4].CLK
clock => dffe17a[3].CLK
clock => dffe17a[2].CLK
clock => dffe17a[1].CLK
clock => dffe17a[0].CLK
clrn => dffe16a[5].ACLR
clrn => dffe16a[4].ACLR
clrn => dffe16a[3].ACLR
clrn => dffe16a[2].ACLR
clrn => dffe16a[1].ACLR
clrn => dffe16a[0].ACLR
clrn => dffe17a[5].ACLR
clrn => dffe17a[4].ACLR
clrn => dffe17a[3].ACLR
clrn => dffe17a[2].ACLR
clrn => dffe17a[1].ACLR
clrn => dffe17a[0].ACLR
d[0] => dffe16a[0].IN0
d[1] => dffe16a[1].IN0
d[2] => dffe16a[2].IN0
d[3] => dffe16a[3].IN0
d[4] => dffe16a[4].IN0
d[5] => dffe16a[5].IN0
q[0] <= dffe17a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffe17a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffe17a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffe17a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffe17a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffe17a[5].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|alt_synch_pipe_kc8:ws_dgrp
clock => dffpipe_fd9:dffpipe18.clock
clrn => dffpipe_fd9:dffpipe18.clrn
d[0] => dffpipe_fd9:dffpipe18.d[0]
d[1] => dffpipe_fd9:dffpipe18.d[1]
d[2] => dffpipe_fd9:dffpipe18.d[2]
d[3] => dffpipe_fd9:dffpipe18.d[3]
d[4] => dffpipe_fd9:dffpipe18.d[4]
d[5] => dffpipe_fd9:dffpipe18.d[5]
q[0] <= dffpipe_fd9:dffpipe18.q[0]
q[1] <= dffpipe_fd9:dffpipe18.q[1]
q[2] <= dffpipe_fd9:dffpipe18.q[2]
q[3] <= dffpipe_fd9:dffpipe18.q[3]
q[4] <= dffpipe_fd9:dffpipe18.q[4]
q[5] <= dffpipe_fd9:dffpipe18.q[5]


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|alt_synch_pipe_kc8:ws_dgrp|dffpipe_fd9:dffpipe18
clock => dffe19a[5].CLK
clock => dffe19a[4].CLK
clock => dffe19a[3].CLK
clock => dffe19a[2].CLK
clock => dffe19a[1].CLK
clock => dffe19a[0].CLK
clock => dffe20a[5].CLK
clock => dffe20a[4].CLK
clock => dffe20a[3].CLK
clock => dffe20a[2].CLK
clock => dffe20a[1].CLK
clock => dffe20a[0].CLK
clrn => dffe19a[5].ACLR
clrn => dffe19a[4].ACLR
clrn => dffe19a[3].ACLR
clrn => dffe19a[2].ACLR
clrn => dffe19a[1].ACLR
clrn => dffe19a[0].ACLR
clrn => dffe20a[5].ACLR
clrn => dffe20a[4].ACLR
clrn => dffe20a[3].ACLR
clrn => dffe20a[2].ACLR
clrn => dffe20a[1].ACLR
clrn => dffe20a[0].ACLR
d[0] => dffe19a[0].IN0
d[1] => dffe19a[1].IN0
d[2] => dffe19a[2].IN0
d[3] => dffe19a[3].IN0
d[4] => dffe19a[4].IN0
d[5] => dffe19a[5].IN0
q[0] <= dffe20a[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffe20a[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffe20a[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffe20a[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffe20a[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffe20a[5].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|cmpr_q16:rdempty_eq_comp
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
dataa[5] => data_wire[2].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1
datab[5] => data_wire[2].IN1


|test|test_bench1:test_bench_inst|Length_DCFF:length_buffer_inst|dcfifo:dcfifo_component|dcfifo_ksh1:auto_generated|cmpr_q16:wrfull_eq_comp
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
dataa[5] => data_wire[2].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1
datab[5] => data_wire[2].IN1


|test|test_bench1:test_bench_inst|LengthCounterSystem:length_counter_sys_inst
clock => LengthCounterFSM:LengthCounterFSM_int.clk
clock => LengthCounter:LengthCounter_inst.clock
CRC_rdv => LengthCounterFSM:LengthCounterFSM_int.CRC_rdv
reset => LengthCounterFSM:LengthCounterFSM_int.reset_sig
reset => LengthCounter:LengthCounter_inst.aclr
lengthValid <= process_0.DB_MAX_OUTPUT_PORT_TYPE
buffer_WE <= LengthCounterFSM:LengthCounterFSM_int.bufferWE
lengthValue[0] <= LengthCounter:LengthCounter_inst.q[1]
lengthValue[1] <= LengthCounter:LengthCounter_inst.q[2]
lengthValue[2] <= LengthCounter:LengthCounter_inst.q[3]
lengthValue[3] <= LengthCounter:LengthCounter_inst.q[4]
lengthValue[4] <= LengthCounter:LengthCounter_inst.q[5]
lengthValue[5] <= LengthCounter:LengthCounter_inst.q[6]
lengthValue[6] <= LengthCounter:LengthCounter_inst.q[7]
lengthValue[7] <= LengthCounter:LengthCounter_inst.q[8]
lengthValue[8] <= LengthCounter:LengthCounter_inst.q[9]
lengthValue[9] <= LengthCounter:LengthCounter_inst.q[10]
lengthValue[10] <= LengthCounter:LengthCounter_inst.q[11]


|test|test_bench1:test_bench_inst|LengthCounterSystem:length_counter_sys_inst|LengthCounterFSM:LengthCounterFSM_int
clk => state_reg~1.DATAIN
reset_sig => state_reg~3.DATAIN
crc_RDV => state_next.COUNT.DATAA
crc_RDV => Selector0.IN2
crc_RDV => state_next.WRITEOUT.DATAB
bufferWE <= bufferWE.DB_MAX_OUTPUT_PORT_TYPE
CntEnable <= CntEnable.DB_MAX_OUTPUT_PORT_TYPE
reset_counter <= reset_counter.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|LengthCounterSystem:length_counter_sys_inst|LengthCounter:LengthCounter_inst
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]
q[9] <= lpm_counter:lpm_counter_component.q[9]
q[10] <= lpm_counter:lpm_counter_component.q[10]
q[11] <= lpm_counter:lpm_counter_component.q[11]


|test|test_bench1:test_bench_inst|LengthCounterSystem:length_counter_sys_inst|LengthCounter:LengthCounter_inst|lpm_counter:lpm_counter_component
clock => cntr_k7j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_k7j:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_k7j:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_k7j:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_k7j:auto_generated.q[0]
q[1] <= cntr_k7j:auto_generated.q[1]
q[2] <= cntr_k7j:auto_generated.q[2]
q[3] <= cntr_k7j:auto_generated.q[3]
q[4] <= cntr_k7j:auto_generated.q[4]
q[5] <= cntr_k7j:auto_generated.q[5]
q[6] <= cntr_k7j:auto_generated.q[6]
q[7] <= cntr_k7j:auto_generated.q[7]
q[8] <= cntr_k7j:auto_generated.q[8]
q[9] <= cntr_k7j:auto_generated.q[9]
q[10] <= cntr_k7j:auto_generated.q[10]
q[11] <= cntr_k7j:auto_generated.q[11]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|test|test_bench1:test_bench_inst|LengthCounterSystem:length_counter_sys_inst|LengthCounter:LengthCounter_inst|lpm_counter:lpm_counter_component|cntr_k7j:auto_generated
aclr => counter_reg_bit1a[11].ACLR
aclr => counter_reg_bit1a[10].ACLR
aclr => counter_reg_bit1a[9].ACLR
aclr => counter_reg_bit1a[8].ACLR
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instLengthWE
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
shiftin => lpm_shiftreg:lpm_shiftreg_component.shiftin
shiftout <= lpm_shiftreg:lpm_shiftreg_component.shiftout


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instLengthWE|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
clock => dffs[0].CLK
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
aclr => dffs[0].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instLengthVal
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
shiftin => lpm_shiftreg:lpm_shiftreg_component.shiftin
shiftout <= lpm_shiftreg:lpm_shiftreg_component.shiftout


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instLengthVal|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
clock => dffs[0].CLK
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
aclr => dffs[0].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst
clock => lengthValidReg:lengthValidReg_inst.clock
clock => outFrameLengthCounter:outFrameLengthCounter_inst.clock
clock => y_current~1.DATAIN
reset => comb.IN1
reset => y_current~3.DATAIN
dataRdEmpty => process_2.IN0
lengthRdEmpty => process_2.IN1
inFrameLengthValue[0] => lengthValidReg:lengthValidReg_inst.data[0]
inFrameLengthValue[1] => lengthValidReg:lengthValidReg_inst.data[1]
inFrameLengthValue[2] => lengthValidReg:lengthValidReg_inst.data[2]
inFrameLengthValue[3] => lengthValidReg:lengthValidReg_inst.data[3]
inFrameLengthValue[4] => lengthValidReg:lengthValidReg_inst.data[4]
inFrameLengthValue[5] => lengthValidReg:lengthValidReg_inst.data[5]
inFrameLengthValue[6] => lengthValidReg:lengthValidReg_inst.data[6]
inFrameLengthValue[7] => lengthValidReg:lengthValidReg_inst.data[7]
inFrameLengthValue[8] => lengthValidReg:lengthValidReg_inst.data[8]
inFrameLengthValue[9] => lengthValidReg:lengthValidReg_inst.data[9]
inFrameLengthValue[10] => lengthValidReg:lengthValidReg_inst.data[10]
inFrameLengthValue[11] => lengthValidReg:lengthValidReg_inst.data[11]
lengthBuffer_RE <= int_lengthBufferRE.DB_MAX_OUTPUT_PORT_TYPE
dataBuffer_RE <= dataBuffer_RE.DB_MAX_OUTPUT_PORT_TYPE
fwdFrameValid <= lengthValidReg:lengthValidReg_inst.q[11]
fwdFrameLengthValue[0] <= lengthValidReg:lengthValidReg_inst.q[0]
fwdFrameLengthValue[1] <= lengthValidReg:lengthValidReg_inst.q[1]
fwdFrameLengthValue[2] <= lengthValidReg:lengthValidReg_inst.q[2]
fwdFrameLengthValue[3] <= lengthValidReg:lengthValidReg_inst.q[3]
fwdFrameLengthValue[4] <= lengthValidReg:lengthValidReg_inst.q[4]
fwdFrameLengthValue[5] <= lengthValidReg:lengthValidReg_inst.q[5]
fwdFrameLengthValue[6] <= lengthValidReg:lengthValidReg_inst.q[6]
fwdFrameLengthValue[7] <= lengthValidReg:lengthValidReg_inst.q[7]
fwdFrameLengthValue[8] <= lengthValidReg:lengthValidReg_inst.q[8]
fwdFrameLengthValue[9] <= lengthValidReg:lengthValidReg_inst.q[9]
fwdFrameLengthValue[10] <= lengthValidReg:lengthValidReg_inst.q[10]


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|lengthValidReg:lengthValidReg_inst
aclr => lpm_ff:lpm_ff_component.aclr
clock => lpm_ff:lpm_ff_component.clock
data[0] => lpm_ff:lpm_ff_component.data[0]
data[1] => lpm_ff:lpm_ff_component.data[1]
data[2] => lpm_ff:lpm_ff_component.data[2]
data[3] => lpm_ff:lpm_ff_component.data[3]
data[4] => lpm_ff:lpm_ff_component.data[4]
data[5] => lpm_ff:lpm_ff_component.data[5]
data[6] => lpm_ff:lpm_ff_component.data[6]
data[7] => lpm_ff:lpm_ff_component.data[7]
data[8] => lpm_ff:lpm_ff_component.data[8]
data[9] => lpm_ff:lpm_ff_component.data[9]
data[10] => lpm_ff:lpm_ff_component.data[10]
data[11] => lpm_ff:lpm_ff_component.data[11]
enable => lpm_ff:lpm_ff_component.enable
q[0] <= lpm_ff:lpm_ff_component.q[0]
q[1] <= lpm_ff:lpm_ff_component.q[1]
q[2] <= lpm_ff:lpm_ff_component.q[2]
q[3] <= lpm_ff:lpm_ff_component.q[3]
q[4] <= lpm_ff:lpm_ff_component.q[4]
q[5] <= lpm_ff:lpm_ff_component.q[5]
q[6] <= lpm_ff:lpm_ff_component.q[6]
q[7] <= lpm_ff:lpm_ff_component.q[7]
q[8] <= lpm_ff:lpm_ff_component.q[8]
q[9] <= lpm_ff:lpm_ff_component.q[9]
q[10] <= lpm_ff:lpm_ff_component.q[10]
q[11] <= lpm_ff:lpm_ff_component.q[11]


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|lengthValidReg:lengthValidReg_inst|lpm_ff:lpm_ff_component
data[0] => dffs[0].DATAIN
data[1] => dffs[1].DATAIN
data[2] => dffs[2].DATAIN
data[3] => dffs[3].DATAIN
data[4] => dffs[4].DATAIN
data[5] => dffs[5].DATAIN
data[6] => dffs[6].DATAIN
data[7] => dffs[7].DATAIN
data[8] => dffs[8].DATAIN
data[9] => dffs[9].DATAIN
data[10] => dffs[10].DATAIN
data[11] => dffs[11].DATAIN
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
aclr => dffs[11].IN0
aset => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sload => ~NO_FANOUT~
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffs[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffs[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= dffs[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= dffs[11].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|outFrameLengthCounter:outFrameLengthCounter_inst
clock => lpm_counter:lpm_counter_component.clock
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]
q[9] <= lpm_counter:lpm_counter_component.q[9]
q[10] <= lpm_counter:lpm_counter_component.q[10]


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|outFrameLengthCounter:outFrameLengthCounter_inst|lpm_counter:lpm_counter_component
clock => cntr_q4i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_q4i:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_q4i:auto_generated.q[0]
q[1] <= cntr_q4i:auto_generated.q[1]
q[2] <= cntr_q4i:auto_generated.q[2]
q[3] <= cntr_q4i:auto_generated.q[3]
q[4] <= cntr_q4i:auto_generated.q[4]
q[5] <= cntr_q4i:auto_generated.q[5]
q[6] <= cntr_q4i:auto_generated.q[6]
q[7] <= cntr_q4i:auto_generated.q[7]
q[8] <= cntr_q4i:auto_generated.q[8]
q[9] <= cntr_q4i:auto_generated.q[9]
q[10] <= cntr_q4i:auto_generated.q[10]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|outFrameLengthCounter:outFrameLengthCounter_inst|lpm_counter:lpm_counter_component|cntr_q4i:auto_generated
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|frameLengthValueComp:frameLengthValueComp_inst
dataa[0] => lpm_compare:lpm_compare_component.dataa[0]
dataa[1] => lpm_compare:lpm_compare_component.dataa[1]
dataa[2] => lpm_compare:lpm_compare_component.dataa[2]
dataa[3] => lpm_compare:lpm_compare_component.dataa[3]
dataa[4] => lpm_compare:lpm_compare_component.dataa[4]
dataa[5] => lpm_compare:lpm_compare_component.dataa[5]
dataa[6] => lpm_compare:lpm_compare_component.dataa[6]
dataa[7] => lpm_compare:lpm_compare_component.dataa[7]
dataa[8] => lpm_compare:lpm_compare_component.dataa[8]
dataa[9] => lpm_compare:lpm_compare_component.dataa[9]
dataa[10] => lpm_compare:lpm_compare_component.dataa[10]
datab[0] => lpm_compare:lpm_compare_component.datab[0]
datab[1] => lpm_compare:lpm_compare_component.datab[1]
datab[2] => lpm_compare:lpm_compare_component.datab[2]
datab[3] => lpm_compare:lpm_compare_component.datab[3]
datab[4] => lpm_compare:lpm_compare_component.datab[4]
datab[5] => lpm_compare:lpm_compare_component.datab[5]
datab[6] => lpm_compare:lpm_compare_component.datab[6]
datab[7] => lpm_compare:lpm_compare_component.datab[7]
datab[8] => lpm_compare:lpm_compare_component.datab[8]
datab[9] => lpm_compare:lpm_compare_component.datab[9]
datab[10] => lpm_compare:lpm_compare_component.datab[10]
AeB <= lpm_compare:lpm_compare_component.AeB


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|frameLengthValueComp:frameLengthValueComp_inst|lpm_compare:lpm_compare_component
dataa[0] => cmpr_nig:auto_generated.dataa[0]
dataa[1] => cmpr_nig:auto_generated.dataa[1]
dataa[2] => cmpr_nig:auto_generated.dataa[2]
dataa[3] => cmpr_nig:auto_generated.dataa[3]
dataa[4] => cmpr_nig:auto_generated.dataa[4]
dataa[5] => cmpr_nig:auto_generated.dataa[5]
dataa[6] => cmpr_nig:auto_generated.dataa[6]
dataa[7] => cmpr_nig:auto_generated.dataa[7]
dataa[8] => cmpr_nig:auto_generated.dataa[8]
dataa[9] => cmpr_nig:auto_generated.dataa[9]
dataa[10] => cmpr_nig:auto_generated.dataa[10]
datab[0] => cmpr_nig:auto_generated.datab[0]
datab[1] => cmpr_nig:auto_generated.datab[1]
datab[2] => cmpr_nig:auto_generated.datab[2]
datab[3] => cmpr_nig:auto_generated.datab[3]
datab[4] => cmpr_nig:auto_generated.datab[4]
datab[5] => cmpr_nig:auto_generated.datab[5]
datab[6] => cmpr_nig:auto_generated.datab[6]
datab[7] => cmpr_nig:auto_generated.datab[7]
datab[8] => cmpr_nig:auto_generated.datab[8]
datab[9] => cmpr_nig:auto_generated.datab[9]
datab[10] => cmpr_nig:auto_generated.datab[10]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
alb <= <GND>
aeb <= cmpr_nig:auto_generated.aeb
agb <= <GND>
aleb <= <GND>
aneb <= <GND>
ageb <= <GND>


|test|test_bench1:test_bench_inst|FwdOutputCntrlr:FwdOutputCntrlr_inst|frameLengthValueComp:frameLengthValueComp_inst|lpm_compare:lpm_compare_component|cmpr_nig:auto_generated
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[2].IN0
dataa[1] => data_wire[2].IN0
dataa[2] => data_wire[3].IN0
dataa[3] => data_wire[3].IN0
dataa[4] => data_wire[4].IN0
dataa[5] => data_wire[4].IN0
dataa[6] => data_wire[5].IN0
dataa[7] => data_wire[5].IN0
dataa[8] => data_wire[6].IN0
dataa[9] => data_wire[6].IN0
dataa[10] => data_wire[7].IN0
datab[0] => data_wire[2].IN1
datab[1] => data_wire[2].IN1
datab[2] => data_wire[3].IN1
datab[3] => data_wire[3].IN1
datab[4] => data_wire[4].IN1
datab[5] => data_wire[4].IN1
datab[6] => data_wire[5].IN1
datab[7] => data_wire[5].IN1
datab[8] => data_wire[6].IN1
datab[9] => data_wire[6].IN1
datab[10] => data_wire[7].IN1


|test|test_bench1:test_bench_inst|SequenceNumberCounter:seq_counter_inst
Clk25Mhz => SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.clock
Clk25Mhz => FrameAvailable~reg0.CLK
FrameValid => ~NO_FANOUT~
CRV => SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.cnt_en
CRV => FrameAvailable~reg0.DATAIN
Reset => SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.aclr
FrameAvailable <= FrameAvailable~reg0.DB_MAX_OUTPUT_PORT_TYPE
SequenceCount[0] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[0]
SequenceCount[1] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[1]
SequenceCount[2] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[2]
SequenceCount[3] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[3]
SequenceCount[4] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[4]
SequenceCount[5] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[5]
SequenceCount[6] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[6]
SequenceCount[7] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[7]
SequenceCount[8] <= SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst.q[8]


|test|test_bench1:test_bench_inst|SequenceNumberCounter:seq_counter_inst|SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]


|test|test_bench1:test_bench_inst|SequenceNumberCounter:seq_counter_inst|SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst|lpm_counter:lpm_counter_component
clock => cntr_mni:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_mni:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_mni:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_mni:auto_generated.q[0]
q[1] <= cntr_mni:auto_generated.q[1]
q[2] <= cntr_mni:auto_generated.q[2]
q[3] <= cntr_mni:auto_generated.q[3]
q[4] <= cntr_mni:auto_generated.q[4]
q[5] <= cntr_mni:auto_generated.q[5]
q[6] <= cntr_mni:auto_generated.q[6]
q[7] <= cntr_mni:auto_generated.q[7]
q[8] <= cntr_mni:auto_generated.q[8]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|test|test_bench1:test_bench_inst|SequenceNumberCounter:seq_counter_inst|SequenceNumberCounter9BitVHD:SequenceNumberCounterNineBit_inst|lpm_counter:lpm_counter_component|cntr_mni:auto_generated
aclr => counter_reg_bit1a[8].ACLR
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT


|test|test_bench1:test_bench_inst|FrameValidFSM:FrameValidFSM_inst
clk => state_reg.CLK
Check_Result => process_2.IN0
CRV => process_2.IN1
lengthValid => state_next.DATAB
reset => state_reg.ACLR
FrameValid <= FrameValid.DB_MAX_OUTPUT_PORT_TYPE
invalidBit <= invalidBit.DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instCR
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
shiftin => lpm_shiftreg:lpm_shiftreg_component.shiftin
shiftout <= lpm_shiftreg:lpm_shiftreg_component.shiftout


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instCR|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
clock => dffs[0].CLK
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
aclr => dffs[0].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instLengthCRV
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
shiftin => lpm_shiftreg:lpm_shiftreg_component.shiftin
shiftout <= lpm_shiftreg:lpm_shiftreg_component.shiftout


|test|test_bench1:test_bench_inst|shift1_1bit:shift1_1bit_instLengthCRV|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
clock => dffs[0].CLK
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
aclr => dffs[0].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|test|MII_to_RCV:phy_inst
Clock25 => framemem:frame_test_mem.clock
Clock25 => addr_curr[0].CLK
Clock25 => addr_curr[1].CLK
Clock25 => addr_curr[2].CLK
Clock25 => addr_curr[3].CLK
Clock25 => addr_curr[4].CLK
Clock25 => addr_curr[5].CLK
Clock25 => addr_curr[6].CLK
Clock25 => addr_curr[7].CLK
Clock25 => addr_curr[8].CLK
Clock25 => addr_curr[9].CLK
Clock25 => cntr12bit:cntrx.clock
Clock25 => y_current~1.DATAIN
Resetx => framemem:frame_test_mem.aclr
Resetx => addr_curr[0].ACLR
Resetx => addr_curr[1].ACLR
Resetx => addr_curr[2].ACLR
Resetx => addr_curr[3].ACLR
Resetx => addr_curr[4].ACLR
Resetx => addr_curr[5].ACLR
Resetx => addr_curr[6].ACLR
Resetx => addr_curr[7].ACLR
Resetx => addr_curr[8].ACLR
Resetx => addr_curr[9].ACLR
Resetx => cntr12bit:cntrx.aclr
Resetx => y_current~3.DATAIN
rcv_data_valid <= rcv_data_valid.DB_MAX_OUTPUT_PORT_TYPE
rcv_data[0] <= framemem:frame_test_mem.q[0]
rcv_data[1] <= framemem:frame_test_mem.q[1]
rcv_data[2] <= framemem:frame_test_mem.q[2]
rcv_data[3] <= framemem:frame_test_mem.q[3]


|test|MII_to_RCV:phy_inst|framemem:frame_test_mem
aclr => altsyncram:altsyncram_component.aclr0
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
address[8] => altsyncram:altsyncram_component.address_a[8]
address[9] => altsyncram:altsyncram_component.address_a[9]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]


|test|MII_to_RCV:phy_inst|framemem:frame_test_mem|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_e781:auto_generated.address_a[0]
address_a[1] => altsyncram_e781:auto_generated.address_a[1]
address_a[2] => altsyncram_e781:auto_generated.address_a[2]
address_a[3] => altsyncram_e781:auto_generated.address_a[3]
address_a[4] => altsyncram_e781:auto_generated.address_a[4]
address_a[5] => altsyncram_e781:auto_generated.address_a[5]
address_a[6] => altsyncram_e781:auto_generated.address_a[6]
address_a[7] => altsyncram_e781:auto_generated.address_a[7]
address_a[8] => altsyncram_e781:auto_generated.address_a[8]
address_a[9] => altsyncram_e781:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e781:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => altsyncram_e781:auto_generated.aclr0
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_e781:auto_generated.q_a[0]
q_a[1] <= altsyncram_e781:auto_generated.q_a[1]
q_a[2] <= altsyncram_e781:auto_generated.q_a[2]
q_a[3] <= altsyncram_e781:auto_generated.q_a[3]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|test|MII_to_RCV:phy_inst|framemem:frame_test_mem|altsyncram:altsyncram_component|altsyncram_e781:auto_generated
aclr0 => ram_block1a0.CLR0
aclr0 => ram_block1a1.CLR0
aclr0 => ram_block1a2.CLR0
aclr0 => ram_block1a3.CLR0
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT


|test|MII_to_RCV:phy_inst|cntr12bit:cntrx
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]
q[9] <= lpm_counter:lpm_counter_component.q[9]
q[10] <= lpm_counter:lpm_counter_component.q[10]
q[11] <= lpm_counter:lpm_counter_component.q[11]


|test|MII_to_RCV:phy_inst|cntr12bit:cntrx|lpm_counter:lpm_counter_component
clock => cntr_k7j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_k7j:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_k7j:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_k7j:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_k7j:auto_generated.q[0]
q[1] <= cntr_k7j:auto_generated.q[1]
q[2] <= cntr_k7j:auto_generated.q[2]
q[3] <= cntr_k7j:auto_generated.q[3]
q[4] <= cntr_k7j:auto_generated.q[4]
q[5] <= cntr_k7j:auto_generated.q[5]
q[6] <= cntr_k7j:auto_generated.q[6]
q[7] <= cntr_k7j:auto_generated.q[7]
q[8] <= cntr_k7j:auto_generated.q[8]
q[9] <= cntr_k7j:auto_generated.q[9]
q[10] <= cntr_k7j:auto_generated.q[10]
q[11] <= cntr_k7j:auto_generated.q[11]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|test|MII_to_RCV:phy_inst|cntr12bit:cntrx|lpm_counter:lpm_counter_component|cntr_k7j:auto_generated
aclr => counter_reg_bit1a[11].ACLR
aclr => counter_reg_bit1a[10].ACLR
aclr => counter_reg_bit1a[9].ACLR
aclr => counter_reg_bit1a[8].ACLR
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


