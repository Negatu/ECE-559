|crc_system_test
clock25 => MII_to_RCV:phy_inst.Clock25
clock25 => SFD_FSM:sfd_fsm_inst.Clock
clock25 => CRC_System:crc_system_inst.Clk
reset => MII_to_RCV:phy_inst.Resetx
reset => SFD_FSM:sfd_fsm_inst.Reset
reset => CRC_System:crc_system_inst.reset
mii_rdv_out <= MII_to_RCV:phy_inst.rcv_data_valid
crc_rdv_out <= SFD_FSM:sfd_fsm_inst.crc_rdv
check_result <= CRC_System:crc_system_inst.CRC_check_result
check_result_valid <= CRC_System:crc_system_inst.CRC_result_valid


|crc_system_test|MII_to_RCV:phy_inst
Clock25 => framemem:frame_test_mem.clock
Clock25 => addr_curr[0].CLK
Clock25 => addr_curr[1].CLK
Clock25 => addr_curr[2].CLK
Clock25 => addr_curr[3].CLK
Clock25 => addr_curr[4].CLK
Clock25 => addr_curr[5].CLK
Clock25 => addr_curr[6].CLK
Clock25 => addr_curr[7].CLK
Clock25 => addr_curr[8].CLK
Clock25 => addr_curr[9].CLK
Clock25 => cntr12bit:cntrx.clock
Clock25 => y_current~1.DATAIN
Resetx => framemem:frame_test_mem.aclr
Resetx => addr_curr[0].ACLR
Resetx => addr_curr[1].ACLR
Resetx => addr_curr[2].ACLR
Resetx => addr_curr[3].ACLR
Resetx => addr_curr[4].ACLR
Resetx => addr_curr[5].ACLR
Resetx => addr_curr[6].ACLR
Resetx => addr_curr[7].ACLR
Resetx => addr_curr[8].ACLR
Resetx => addr_curr[9].ACLR
Resetx => cntr12bit:cntrx.aclr
Resetx => y_current~3.DATAIN
rcv_data_valid <= rcv_data_valid.DB_MAX_OUTPUT_PORT_TYPE
rcv_data[0] <= framemem:frame_test_mem.q[0]
rcv_data[1] <= framemem:frame_test_mem.q[1]
rcv_data[2] <= framemem:frame_test_mem.q[2]
rcv_data[3] <= framemem:frame_test_mem.q[3]


|crc_system_test|MII_to_RCV:phy_inst|framemem:frame_test_mem
aclr => altsyncram:altsyncram_component.aclr0
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
address[8] => altsyncram:altsyncram_component.address_a[8]
address[9] => altsyncram:altsyncram_component.address_a[9]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]


|crc_system_test|MII_to_RCV:phy_inst|framemem:frame_test_mem|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_e781:auto_generated.address_a[0]
address_a[1] => altsyncram_e781:auto_generated.address_a[1]
address_a[2] => altsyncram_e781:auto_generated.address_a[2]
address_a[3] => altsyncram_e781:auto_generated.address_a[3]
address_a[4] => altsyncram_e781:auto_generated.address_a[4]
address_a[5] => altsyncram_e781:auto_generated.address_a[5]
address_a[6] => altsyncram_e781:auto_generated.address_a[6]
address_a[7] => altsyncram_e781:auto_generated.address_a[7]
address_a[8] => altsyncram_e781:auto_generated.address_a[8]
address_a[9] => altsyncram_e781:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e781:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => altsyncram_e781:auto_generated.aclr0
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_e781:auto_generated.q_a[0]
q_a[1] <= altsyncram_e781:auto_generated.q_a[1]
q_a[2] <= altsyncram_e781:auto_generated.q_a[2]
q_a[3] <= altsyncram_e781:auto_generated.q_a[3]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|crc_system_test|MII_to_RCV:phy_inst|framemem:frame_test_mem|altsyncram:altsyncram_component|altsyncram_e781:auto_generated
aclr0 => ram_block1a0.CLR0
aclr0 => ram_block1a1.CLR0
aclr0 => ram_block1a2.CLR0
aclr0 => ram_block1a3.CLR0
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT


|crc_system_test|MII_to_RCV:phy_inst|cntr12bit:cntrx
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
sclr => lpm_counter:lpm_counter_component.sclr
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]
q[8] <= lpm_counter:lpm_counter_component.q[8]
q[9] <= lpm_counter:lpm_counter_component.q[9]
q[10] <= lpm_counter:lpm_counter_component.q[10]
q[11] <= lpm_counter:lpm_counter_component.q[11]


|crc_system_test|MII_to_RCV:phy_inst|cntr12bit:cntrx|lpm_counter:lpm_counter_component
clock => cntr_k7j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_k7j:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_k7j:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_k7j:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_k7j:auto_generated.q[0]
q[1] <= cntr_k7j:auto_generated.q[1]
q[2] <= cntr_k7j:auto_generated.q[2]
q[3] <= cntr_k7j:auto_generated.q[3]
q[4] <= cntr_k7j:auto_generated.q[4]
q[5] <= cntr_k7j:auto_generated.q[5]
q[6] <= cntr_k7j:auto_generated.q[6]
q[7] <= cntr_k7j:auto_generated.q[7]
q[8] <= cntr_k7j:auto_generated.q[8]
q[9] <= cntr_k7j:auto_generated.q[9]
q[10] <= cntr_k7j:auto_generated.q[10]
q[11] <= cntr_k7j:auto_generated.q[11]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|crc_system_test|MII_to_RCV:phy_inst|cntr12bit:cntrx|lpm_counter:lpm_counter_component|cntr_k7j:auto_generated
aclr => counter_reg_bit1a[11].ACLR
aclr => counter_reg_bit1a[10].ACLR
aclr => counter_reg_bit1a[9].ACLR
aclr => counter_reg_bit1a[8].ACLR
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|crc_system_test|SFD_FSM:sfd_fsm_inst
Clock => shift1_4bit:shift4bit_inst.clock
Clock => y_current~1.DATAIN
sfd_rdv => Selector1.IN2
sfd_rdv => shift1_4bit:shift4bit_inst.load
sfd_rdv => Selector0.IN2
Reset => y_current~3.DATAIN
dataIn[0] => shift1_4bit:shift4bit_inst.data[0]
dataIn[0] => Equal0.IN1
dataIn[0] => Equal1.IN3
dataIn[1] => shift1_4bit:shift4bit_inst.data[1]
dataIn[1] => Equal0.IN3
dataIn[1] => Equal1.IN2
dataIn[2] => shift1_4bit:shift4bit_inst.data[2]
dataIn[2] => Equal0.IN0
dataIn[2] => Equal1.IN0
dataIn[3] => shift1_4bit:shift4bit_inst.data[3]
dataIn[3] => Equal0.IN2
dataIn[3] => Equal1.IN1
dataOut[0] <= shift1_4bit:shift4bit_inst.q[0]
dataOut[1] <= shift1_4bit:shift4bit_inst.q[1]
dataOut[2] <= shift1_4bit:shift4bit_inst.q[2]
dataOut[3] <= shift1_4bit:shift4bit_inst.q[3]
crc_rdv <= crc_rdv.DB_MAX_OUTPUT_PORT_TYPE


|crc_system_test|SFD_FSM:sfd_fsm_inst|shift1_4bit:shift4bit_inst
clock => lpm_shiftreg:lpm_shiftreg_component.clock
data[0] => lpm_shiftreg:lpm_shiftreg_component.data[0]
data[1] => lpm_shiftreg:lpm_shiftreg_component.data[1]
data[2] => lpm_shiftreg:lpm_shiftreg_component.data[2]
data[3] => lpm_shiftreg:lpm_shiftreg_component.data[3]
load => lpm_shiftreg:lpm_shiftreg_component.load
q[0] <= lpm_shiftreg:lpm_shiftreg_component.q[0]
q[1] <= lpm_shiftreg:lpm_shiftreg_component.q[1]
q[2] <= lpm_shiftreg:lpm_shiftreg_component.q[2]
q[3] <= lpm_shiftreg:lpm_shiftreg_component.q[3]


|crc_system_test|SFD_FSM:sfd_fsm_inst|shift1_4bit:shift4bit_inst|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= shiftout.DB_MAX_OUTPUT_PORT_TYPE


|crc_system_test|CRC_System:crc_system_inst
Clk => CRC_FSM:CRC_FSM_inst.clk
Clk => crc32x4r:crc32x4r_inst.Clock
reset => CRC_FSM:CRC_FSM_inst.reset_sig
reset => crc32x4r:crc32x4r_inst.Reset
rdv => CRC_FSM:CRC_FSM_inst.rdv
data_in_4[0] => crc32x4r:crc32x4r_inst.u4[0]
data_in_4[1] => crc32x4r:crc32x4r_inst.u4[1]
data_in_4[2] => crc32x4r:crc32x4r_inst.u4[2]
data_in_4[3] => crc32x4r:crc32x4r_inst.u4[3]
CRC_result_valid <= CRC_FSM:CRC_FSM_inst.crv
CRC_check_result <= CRC_FSM:CRC_FSM_inst.check_result


|crc_system_test|CRC_System:crc_system_inst|CRC_FSM:CRC_FSM_inst
clk => shift1_1bit:shift_check_result.clock
clk => state_reg~1.DATAIN
reset_sig => shift1_1bit:shift_check_result.aclr
reset_sig => state_reg~3.DATAIN
rdv => state_next.RUN.DATAB
rdv => Selector0.IN2
rdv => state_next.CHECK.DATAB
CRC_out[0] => WideOr1.IN0
CRC_out[1] => WideOr1.IN1
CRC_out[2] => WideOr1.IN2
CRC_out[3] => WideOr1.IN3
CRC_out[4] => WideOr1.IN4
CRC_out[5] => WideOr1.IN5
CRC_out[6] => WideOr1.IN6
CRC_out[7] => WideOr1.IN7
CRC_out[8] => WideOr1.IN8
CRC_out[9] => WideOr1.IN9
CRC_out[10] => WideOr1.IN10
CRC_out[11] => WideOr1.IN11
CRC_out[12] => WideOr1.IN12
CRC_out[13] => WideOr1.IN13
CRC_out[14] => WideOr1.IN14
CRC_out[15] => WideOr1.IN15
CRC_out[16] => WideOr1.IN16
CRC_out[17] => WideOr1.IN17
CRC_out[18] => WideOr1.IN18
CRC_out[19] => WideOr1.IN19
CRC_out[20] => WideOr1.IN20
CRC_out[21] => WideOr1.IN21
CRC_out[22] => WideOr1.IN22
CRC_out[23] => WideOr1.IN23
CRC_out[24] => WideOr1.IN24
CRC_out[25] => WideOr1.IN25
CRC_out[26] => WideOr1.IN26
CRC_out[27] => WideOr1.IN27
CRC_out[28] => WideOr1.IN28
CRC_out[29] => WideOr1.IN29
CRC_out[30] => WideOr1.IN30
CRC_out[31] => WideOr1.IN31
init_sig <= init_sig.DB_MAX_OUTPUT_PORT_TYPE
compute_enable <= compute_enable.DB_MAX_OUTPUT_PORT_TYPE
check_result <= shift1_1bit:shift_check_result.shiftout
crv <= crv.DB_MAX_OUTPUT_PORT_TYPE


|crc_system_test|CRC_System:crc_system_inst|CRC_FSM:CRC_FSM_inst|shift1_1bit:shift_check_result
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
shiftin => lpm_shiftreg:lpm_shiftreg_component.shiftin
shiftout <= lpm_shiftreg:lpm_shiftreg_component.shiftout


|crc_system_test|CRC_System:crc_system_inst|CRC_FSM:CRC_FSM_inst|shift1_1bit:shift_check_result|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
clock => dffs[0].CLK
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
aclr => dffs[0].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|crc_system_test|CRC_System:crc_system_inst|crc32x4r:crc32x4r_inst
Clock => crcreg32:crcreg32r.clock
Reset => crcreg32:crcreg32r.aclr
compute_enable => crcreg_clock_enable.IN0
init => crcreg_clock_enable.IN1
init => crcreg32:crcreg32r.sset
u4[0] => Q_next[0].IN1
u4[1] => ux4[2].IN1
u4[2] => ux4[1].IN1
u4[3] => ux4[0].IN1
CRC_out[0] <= crcreg32:crcreg32r.q[0]
CRC_out[1] <= crcreg32:crcreg32r.q[1]
CRC_out[2] <= crcreg32:crcreg32r.q[2]
CRC_out[3] <= crcreg32:crcreg32r.q[3]
CRC_out[4] <= crcreg32:crcreg32r.q[4]
CRC_out[5] <= crcreg32:crcreg32r.q[5]
CRC_out[6] <= crcreg32:crcreg32r.q[6]
CRC_out[7] <= crcreg32:crcreg32r.q[7]
CRC_out[8] <= crcreg32:crcreg32r.q[8]
CRC_out[9] <= crcreg32:crcreg32r.q[9]
CRC_out[10] <= crcreg32:crcreg32r.q[10]
CRC_out[11] <= crcreg32:crcreg32r.q[11]
CRC_out[12] <= crcreg32:crcreg32r.q[12]
CRC_out[13] <= crcreg32:crcreg32r.q[13]
CRC_out[14] <= crcreg32:crcreg32r.q[14]
CRC_out[15] <= crcreg32:crcreg32r.q[15]
CRC_out[16] <= crcreg32:crcreg32r.q[16]
CRC_out[17] <= crcreg32:crcreg32r.q[17]
CRC_out[18] <= crcreg32:crcreg32r.q[18]
CRC_out[19] <= crcreg32:crcreg32r.q[19]
CRC_out[20] <= crcreg32:crcreg32r.q[20]
CRC_out[21] <= crcreg32:crcreg32r.q[21]
CRC_out[22] <= crcreg32:crcreg32r.q[22]
CRC_out[23] <= crcreg32:crcreg32r.q[23]
CRC_out[24] <= crcreg32:crcreg32r.q[24]
CRC_out[25] <= crcreg32:crcreg32r.q[25]
CRC_out[26] <= crcreg32:crcreg32r.q[26]
CRC_out[27] <= crcreg32:crcreg32r.q[27]
CRC_out[28] <= crcreg32:crcreg32r.q[28]
CRC_out[29] <= crcreg32:crcreg32r.q[29]
CRC_out[30] <= crcreg32:crcreg32r.q[30]
CRC_out[31] <= crcreg32:crcreg32r.q[31]


|crc_system_test|CRC_System:crc_system_inst|crc32x4r:crc32x4r_inst|crcreg32:crcreg32r
aclr => lpm_shiftreg:lpm_shiftreg_component.aclr
clock => lpm_shiftreg:lpm_shiftreg_component.clock
data[0] => lpm_shiftreg:lpm_shiftreg_component.data[0]
data[1] => lpm_shiftreg:lpm_shiftreg_component.data[1]
data[2] => lpm_shiftreg:lpm_shiftreg_component.data[2]
data[3] => lpm_shiftreg:lpm_shiftreg_component.data[3]
data[4] => lpm_shiftreg:lpm_shiftreg_component.data[4]
data[5] => lpm_shiftreg:lpm_shiftreg_component.data[5]
data[6] => lpm_shiftreg:lpm_shiftreg_component.data[6]
data[7] => lpm_shiftreg:lpm_shiftreg_component.data[7]
data[8] => lpm_shiftreg:lpm_shiftreg_component.data[8]
data[9] => lpm_shiftreg:lpm_shiftreg_component.data[9]
data[10] => lpm_shiftreg:lpm_shiftreg_component.data[10]
data[11] => lpm_shiftreg:lpm_shiftreg_component.data[11]
data[12] => lpm_shiftreg:lpm_shiftreg_component.data[12]
data[13] => lpm_shiftreg:lpm_shiftreg_component.data[13]
data[14] => lpm_shiftreg:lpm_shiftreg_component.data[14]
data[15] => lpm_shiftreg:lpm_shiftreg_component.data[15]
data[16] => lpm_shiftreg:lpm_shiftreg_component.data[16]
data[17] => lpm_shiftreg:lpm_shiftreg_component.data[17]
data[18] => lpm_shiftreg:lpm_shiftreg_component.data[18]
data[19] => lpm_shiftreg:lpm_shiftreg_component.data[19]
data[20] => lpm_shiftreg:lpm_shiftreg_component.data[20]
data[21] => lpm_shiftreg:lpm_shiftreg_component.data[21]
data[22] => lpm_shiftreg:lpm_shiftreg_component.data[22]
data[23] => lpm_shiftreg:lpm_shiftreg_component.data[23]
data[24] => lpm_shiftreg:lpm_shiftreg_component.data[24]
data[25] => lpm_shiftreg:lpm_shiftreg_component.data[25]
data[26] => lpm_shiftreg:lpm_shiftreg_component.data[26]
data[27] => lpm_shiftreg:lpm_shiftreg_component.data[27]
data[28] => lpm_shiftreg:lpm_shiftreg_component.data[28]
data[29] => lpm_shiftreg:lpm_shiftreg_component.data[29]
data[30] => lpm_shiftreg:lpm_shiftreg_component.data[30]
data[31] => lpm_shiftreg:lpm_shiftreg_component.data[31]
enable => lpm_shiftreg:lpm_shiftreg_component.enable
load => lpm_shiftreg:lpm_shiftreg_component.load
sset => lpm_shiftreg:lpm_shiftreg_component.sset
q[0] <= lpm_shiftreg:lpm_shiftreg_component.q[0]
q[1] <= lpm_shiftreg:lpm_shiftreg_component.q[1]
q[2] <= lpm_shiftreg:lpm_shiftreg_component.q[2]
q[3] <= lpm_shiftreg:lpm_shiftreg_component.q[3]
q[4] <= lpm_shiftreg:lpm_shiftreg_component.q[4]
q[5] <= lpm_shiftreg:lpm_shiftreg_component.q[5]
q[6] <= lpm_shiftreg:lpm_shiftreg_component.q[6]
q[7] <= lpm_shiftreg:lpm_shiftreg_component.q[7]
q[8] <= lpm_shiftreg:lpm_shiftreg_component.q[8]
q[9] <= lpm_shiftreg:lpm_shiftreg_component.q[9]
q[10] <= lpm_shiftreg:lpm_shiftreg_component.q[10]
q[11] <= lpm_shiftreg:lpm_shiftreg_component.q[11]
q[12] <= lpm_shiftreg:lpm_shiftreg_component.q[12]
q[13] <= lpm_shiftreg:lpm_shiftreg_component.q[13]
q[14] <= lpm_shiftreg:lpm_shiftreg_component.q[14]
q[15] <= lpm_shiftreg:lpm_shiftreg_component.q[15]
q[16] <= lpm_shiftreg:lpm_shiftreg_component.q[16]
q[17] <= lpm_shiftreg:lpm_shiftreg_component.q[17]
q[18] <= lpm_shiftreg:lpm_shiftreg_component.q[18]
q[19] <= lpm_shiftreg:lpm_shiftreg_component.q[19]
q[20] <= lpm_shiftreg:lpm_shiftreg_component.q[20]
q[21] <= lpm_shiftreg:lpm_shiftreg_component.q[21]
q[22] <= lpm_shiftreg:lpm_shiftreg_component.q[22]
q[23] <= lpm_shiftreg:lpm_shiftreg_component.q[23]
q[24] <= lpm_shiftreg:lpm_shiftreg_component.q[24]
q[25] <= lpm_shiftreg:lpm_shiftreg_component.q[25]
q[26] <= lpm_shiftreg:lpm_shiftreg_component.q[26]
q[27] <= lpm_shiftreg:lpm_shiftreg_component.q[27]
q[28] <= lpm_shiftreg:lpm_shiftreg_component.q[28]
q[29] <= lpm_shiftreg:lpm_shiftreg_component.q[29]
q[30] <= lpm_shiftreg:lpm_shiftreg_component.q[30]
q[31] <= lpm_shiftreg:lpm_shiftreg_component.q[31]


|crc_system_test|CRC_System:crc_system_inst|crc32x4r:crc32x4r_inst|crcreg32:crcreg32r|lpm_shiftreg:lpm_shiftreg_component
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
data[19] => _.IN1
data[20] => _.IN1
data[21] => _.IN1
data[22] => _.IN1
data[23] => _.IN1
data[24] => _.IN1
data[25] => _.IN1
data[26] => _.IN1
data[27] => _.IN1
data[28] => _.IN1
data[29] => _.IN1
data[30] => _.IN1
data[31] => _.IN1
clock => dffs[31].CLK
clock => dffs[30].CLK
clock => dffs[29].CLK
clock => dffs[28].CLK
clock => dffs[27].CLK
clock => dffs[26].CLK
clock => dffs[25].CLK
clock => dffs[24].CLK
clock => dffs[23].CLK
clock => dffs[22].CLK
clock => dffs[21].CLK
clock => dffs[20].CLK
clock => dffs[19].CLK
clock => dffs[18].CLK
clock => dffs[17].CLK
clock => dffs[16].CLK
clock => dffs[15].CLK
clock => dffs[14].CLK
clock => dffs[13].CLK
clock => dffs[12].CLK
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[31].ENA
enable => dffs[30].ENA
enable => dffs[29].ENA
enable => dffs[28].ENA
enable => dffs[27].ENA
enable => dffs[26].ENA
enable => dffs[25].ENA
enable => dffs[24].ENA
enable => dffs[23].ENA
enable => dffs[22].ENA
enable => dffs[21].ENA
enable => dffs[20].ENA
enable => dffs[19].ENA
enable => dffs[18].ENA
enable => dffs[17].ENA
enable => dffs[16].ENA
enable => dffs[15].ENA
enable => dffs[14].ENA
enable => dffs[13].ENA
enable => dffs[12].ENA
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[31].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffs[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffs[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= dffs[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= dffs[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= dffs[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= dffs[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= dffs[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= dffs[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= dffs[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= dffs[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= dffs[18].DB_MAX_OUTPUT_PORT_TYPE
q[19] <= dffs[19].DB_MAX_OUTPUT_PORT_TYPE
q[20] <= dffs[20].DB_MAX_OUTPUT_PORT_TYPE
q[21] <= dffs[21].DB_MAX_OUTPUT_PORT_TYPE
q[22] <= dffs[22].DB_MAX_OUTPUT_PORT_TYPE
q[23] <= dffs[23].DB_MAX_OUTPUT_PORT_TYPE
q[24] <= dffs[24].DB_MAX_OUTPUT_PORT_TYPE
q[25] <= dffs[25].DB_MAX_OUTPUT_PORT_TYPE
q[26] <= dffs[26].DB_MAX_OUTPUT_PORT_TYPE
q[27] <= dffs[27].DB_MAX_OUTPUT_PORT_TYPE
q[28] <= dffs[28].DB_MAX_OUTPUT_PORT_TYPE
q[29] <= dffs[29].DB_MAX_OUTPUT_PORT_TYPE
q[30] <= dffs[30].DB_MAX_OUTPUT_PORT_TYPE
q[31] <= dffs[31].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= shiftout.DB_MAX_OUTPUT_PORT_TYPE


